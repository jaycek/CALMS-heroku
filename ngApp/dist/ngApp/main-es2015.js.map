{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/ebill-edit/ebill-edit.component.ts","./src/app/ebill-edit/ebill-edit.component.html","./src/app/ebillsubscribe/ebillsubscribe.component.ts","./src/app/ebillsubscribe/ebillsubscribe.component.html","./src/app/edit-profile/edit-profile.component.ts","./src/app/edit-profile/edit-profile.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lab-edit/lab-edit.component.ts","./src/app/lab-edit/lab-edit.component.html","./src/app/lab-home/lab-home.component.ts","./src/app/lab-home/lab-home.component.html","./src/app/lab-home/labdetail.model.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/payment/payment.component.ts","./src/app/payment/payment.component.html","./src/app/profile/User.model.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/profile/service.model.ts","./src/app/register/confirmedvalidator.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services-home/services-home.component.ts","./src/app/services-home/services-home.component.html","./src/app/services/services.component.ts","./src/app/services/services.component.html","./src/app/task-detail/task-detail.component.ts","./src/app/task-detail/task-detail.component.html","./src/app/tasks/task.model.ts","./src/app/tasks/taskdetail.model.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/token-interceptor.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/utils.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport {ServicesComponent} from './services/services.component';\nimport { EbillsubscribeComponent } from './ebillsubscribe/ebillsubscribe.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ServicesHomeComponent } from './services-home/services-home.component';\nimport { EbillEditComponent } from './ebill-edit/ebill-edit.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport {TaskDetailComponent} from './task-detail/task-detail.component';\nimport {AuthGuard} from './auth.guard';\nimport { UsersComponent } from './users/users.component';\nimport { LabHomeComponent } from './lab-home/lab-home.component';\nimport { LabEditComponent } from './lab-edit/lab-edit.component';\nimport { PaymentComponent } from './payment/payment.component';\n\n\nconst routes: Routes = [ \n    {path:\"\",component:HomeComponent},\n    {path:\"register\",component:RegisterComponent},\n    {path:\"login\",component:LoginComponent},\n    {path:\"serviceshome/ebillsubscribe\",component:EbillsubscribeComponent,canActivate:[AuthGuard]},\n    {path:\"profile\",component:ProfileComponent,canActivate:[AuthGuard]},\n    {path:'editprofile',component:EditProfileComponent,canActivate:[AuthGuard]},\n    {path:'serviceshome',component:ServicesHomeComponent,canActivate:[AuthGuard]},\n    {path:'ebilledit',component:EbillEditComponent,canActivate:[AuthGuard]},\n    {path:'tasks',component:TasksComponent,canActivate:[AuthGuard]},\n    {path:'taskdetail/:id',component:TaskDetailComponent,canActivate:[AuthGuard]},\n    {path:'users',component:UsersComponent,canActivate:[AuthGuard]},\n    {path:'serviceshome/labsubscribe',component:LabHomeComponent,canActivate:[AuthGuard]},\n    {path:'labedit',component:LabEditComponent,canActivate:[AuthGuard]},\n    {path:'payment',component:PaymentComponent,canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngApp';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthService } from './auth.service';\nimport { HomeComponent } from './home/home.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {UtilsService} from './utils.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { ServicesComponent } from './services/services.component';\nimport { EbillsubscribeComponent } from './ebillsubscribe/ebillsubscribe.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ServicesHomeComponent } from './services-home/services-home.component';\nimport { YouTubePlayerModule } from \"@angular/youtube-player\";\nimport { EbillEditComponent } from './ebill-edit/ebill-edit.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport {TokenInterceptorService} from './token-interceptor.service';\nimport {AuthGuard} from './auth.guard';\nimport { UsersComponent } from './users/users.component';\nimport { LabHomeComponent } from './lab-home/lab-home.component';\nimport { LabEditComponent } from './lab-edit/lab-edit.component';\nimport { PaymentComponent } from './payment/payment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    HeaderComponent,\n    HomeComponent,\n    FooterComponent,\n    ServicesComponent,\n    EbillsubscribeComponent,\n    LoginComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    ServicesHomeComponent,\n    EbillEditComponent,\n    TasksComponent,\n    TaskDetailComponent,\n    UsersComponent,\n    LabHomeComponent,\n    LabEditComponent,\n    PaymentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    YouTubePlayerModule\n  ],\n  providers: [AuthService,UtilsService,AuthGuard,\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:TokenInterceptorService,\n      multi:true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree ,Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  \n  constructor(private _auth:AuthService,private _router:Router){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this._auth.loggedIn()){\n        \n        return true;\n    } \n    else{\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // private _registerUrl = \"http://localhost:3000/register\";\n  // private _loginUrl = \"http://localhost:3000/login\";\n  // private _getUserUrl =\"http://localhost:3000/getUserDetails\";\n  // private _updateUserUrl = \"http://localhost:3000/updateUser\";\n  // private _getUsersUrl=\"http://localhost:3000/getUsers\";\n  // private _deleteUserUrl=\"http://localhost:3000/deleteUser\";\n\n  private _registerUrl = \"register\";\n  private _loginUrl = \"login\";\n  private _getUserUrl =\"getUserDetails\";\n  private _updateUserUrl = \"updateUser\";\n  private _getUsersUrl=\"getUsers\";\n  private _deleteUserUrl=\"deleteUser\";\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user){\n    // console.log(user);\n    return this.http.post(this._registerUrl,user);\n  }\n\n  loginUser(user){\n    return this.http.post(this._loginUrl,user);\n  }\n\n  getLoggedInUseremail(){\n    return localStorage.getItem('CALMSemail');\n  }\n  \n  getLoggedInUserID(){\n    return localStorage.getItem('CALMSuserID')\n  }\n  getUserDetails(id){\n    return this.http.post(this._getUserUrl,{\"_id\":id});\n  }\n\n  getUsers(){\n    return this.http.get(this._getUsersUrl);\n  }\n\n  saveUser(user){\n    return this.http.post(this._updateUserUrl,user);\n  }\n\n  deleteUser(id){\n    return this.http.post(this._deleteUserUrl,{\"userID\":id});\n  }\n\n  loggedIn(){\n    return !!localStorage.getItem('token');\n\n  }\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n  isAdmin(){\n    return !!localStorage.getItem('isAdmin');\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\n\n@Component({\n  selector: 'app-ebill-edit',\n  templateUrl: './ebill-edit.component.html',\n  styleUrls: ['./ebill-edit.component.css']\n})\nexport class EbillEditComponent implements OnInit {\n\n  \n  \n  numbers:Number[]=[];\n  useremail ;\n  freqoptions;\n  selectedFreq;\n  userID;\n  today:Date;\n  nowDate:Date;\n  task=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  //to calculate scheduled date of task\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\nscheduledday;\n\n\n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n    \n    this.userID=this._auth.getLoggedInUserID();\n    this._utils.getEBService(this.userID.toString())\n    .subscribe(\n      res=>{\n        console.log(res);\n          this.ebdata= JSON.parse(JSON.stringify(res));\n          this.ebdata.userID=this.userID.toString();\n          \n      },\n      err=>{\n        console.log(err);\n      }\n\n    )\n   }\n  \n   ebdata={userID:\"\",consumernum:\"\",paymentfreq:\"\",dateofpayment:undefined};\n   \n   ebillForm= this.fb.group(\n    {\n      consumer:['',[Validators.required]],\n      paymentfreq:['',[Validators.required]],\n      dateofpayment:['',[Validators.required]]\n  }\n\n   )\n\n  ngOnInit(): void {\n\n    \n  }\n\n  update(){\n    \n\n    this.nowDate= new Date();\n    \n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n\n     this._utils.updateEBService(this.ebdata)\n      .subscribe(res=>{\n              \n//update task on;y if there is change in payment date or paymentfrequency\n      if(this.ebillForm.get('paymentfreq').touched || this.ebillForm.get('paymentdate').touched) {\n        \n            if(this.ebillForm.get('paymentfreq').value ==\"Monthly\"){\n              //for dec month and monthly freq and payment date is past current date,schedule for next month\n              //and next year\n              if(this.currmonth ==11 && this.ebillForm.get('dateofpayment').value< this.currDate ){\n                this.scheduledmonth=0;\n                this.scheduledyear=this.curryear+1;\n              }\n              //if payment date is not over for current month, schedule for current month\n              else if(this.ebillForm.get('dateofpayment').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                //Not Dec, other cases, schedule for next month, current year\n                this.scheduledmonth=this.currmonth +1;\n                this.scheduledyear=this.curryear;\n              }\n          }\n          //repeat above cases for Bi monthly..only increment by 2 months\n          if(this.ebillForm.get('paymentfreq').value ==\"Bimonthly\"){\n              if(this.currmonth ==11|| this.currmonth ==10 && this.ebillForm.get('dateofpayment').value< this.currDate ){\n                this.scheduledmonth=1;\n                this.scheduledyear=this.curryear+1;\n              }\n              else if(this.ebillForm.get('dateofpayment').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                this.scheduledmonth=this.currmonth+2;\n                this.scheduledyear=this.curryear;\n              }\n          }\n        \n          this.scheduledday=this.ebillForm.get('dateofpayment').value;\n          console.log(\"New day\" + this.scheduledday);\n          console.log(\"New month\"+ this.scheduledmonth);\n          console.log(\"New year\"+ this.scheduledyear);\n\n          this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday);\n      \n          console.log(\"Scheduled date is \"+ this.scheduleddate);\n          this.task= {userID:this.userID,email:this.useremail,servicetype:'eb',scheduleddate:this.scheduleddate,completed:false};\n          \n          this._utils.updatetask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              \n            },\n          err=>{\n            console.log(err);\n          }\n             )\n\n      }\n       \n      \n      \n      })\n      this._router.navigate(['/profile']);\n      }\n\n}\n","\n<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n    \n<div class=\"row\" >\n    <div class=\"col-md-4\">\n\n    </div>\n    <div class=\"col-md-4\">\n        <div class=\"card rounded-0\" id=\"main\">\n            <div class=\"card-header\">\n                <h3 class=\"mb-0\">Electricity bill payment service</h3>\n            </div>\n            \n            <div class=\"card-body\">\n                <form  class=\"form\"  [formGroup]=\"ebillForm\"  >\n                    <div class=\"form-group\">\n                        <label for=\"consumer\">Consumer Number: </label>\n                        <input type=\"text\"  formControlName= \"consumer\" name=\"consumer\" id=\"consumer\" class=\"form-control rounded-0\" [(ngModel)]='ebdata.consumernum' >\n                        <div *ngIf= \"ebillForm.get('consumer').invalid && ebillForm.get('consumer').touched\">\n                            <small *ngIf = \"ebillForm.get('consumer').errors?.required\" class=\"text-white\" >Consumer Number is required</small>\n                           \n                        </div>\n                    </div>\n                    <div class=\"form-group\" >\n                        <label for=\"frequency\">Payment Frequency: </label>\n                           <select  name=\"paymentfreq\" id=\"paymentfreq\" class=\"form-control rounded-0\" formControlName=\"paymentfreq\" [(ngModel)]='ebdata.paymentfreq'> \n                           <option *ngFor=\"let paymentfreq of freqoptions\" [ngValue]=\"paymentfreq\">{{paymentfreq}}</option> \n                    \n                        </select>\n          \n                        <div *ngIf= \"ebillForm.get('paymentfreq').invalid && ebillForm.get('paymentfreq').touched\">\n                            <small *ngIf = \"ebillForm.get('paymentfreq').errors?.required\" class=\"text-white\" >Payment Frequency is required</small>\n                            \n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"dateofpayment\">Payment Date: </label>\n                        \n                     \n                        <select  name=\"dateofpayment\" id=\"dateofpayment\" class=\"form-control rounded-0\" formControlName=\"dateofpayment\" [(ngModel)]='ebdata.dateofpayment' > \n                            <option *ngFor=\"let dateofpayment of numbers\" [ngValue]=\"dateofpayment\">{{dateofpayment}}</option> \n                     \n                         </select>\n                        <div *ngIf= \"ebillForm.get('dateofpayment').invalid && ebillForm.get('dateofpayment').touched\">\n                            <small *ngIf = \"ebillForm.get('dateofpayment').errors?.required\" class=\"text-white\" >Payment Date is required</small>\n                            <small *ngIf = \"ebillForm.get('dateofpayment').errors?.serverError\" class=\"text-white\" >{{ebillForm.get('dateofpayment').errors?.serverError}}</small>\n                        </div>\n                       \n                    </div>\n                    <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                    <button type=\"submit\" (click)=\"update()\" [disabled]=\"ebillForm.invalid\"  class=\"btn btn-success float-right\">Submit</button>\n                    \n        \n                </form>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"col-md-4\">\n\n    </div>\n\n</div>\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\n\n@Component({\n  selector: 'app-ebillsubscribe',\n  templateUrl: './ebillsubscribe.component.html',\n  styleUrls: ['./ebillsubscribe.component.css']\n})\nexport class EbillsubscribeComponent implements OnInit {\n\n  \n  numbers:Number[]=[];\n  useremail ;\n  freqoptions;\n  selectedFreq;\n  ebillData;\n  userID;\n  // today:String;\n  nowDate:Date;\n  task=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  //to calculate scheduled date of task\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\nscheduledday;\n\n\n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n   }\n  \n  \n\n   ebillForm= this.fb.group(\n    {\n      consumer:['',[Validators.required]],\n      paymentfreq:['',[Validators.required]],\n      paymentdate:['',[Validators.required]]\n  }\n\n   )\n  ngOnInit(): void {\n  \n  }\n  \n  subscribe(pay){\n    \n    \n    this.useremail  = this._auth.getLoggedInUseremail();\n  \n    this.userID  = this._auth.getLoggedInUserID();\n    this.nowDate= new Date();  \n\n     this.ebillData={userID:this.userID, email:this.useremail,registeredDate:this.nowDate, consumernum:this.ebillForm.get('consumer').value,\n        paymentfreq:this.ebillForm.get('paymentfreq').value,dateofpayment:this.ebillForm.get('paymentdate').value};\n\n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n    console.log(this.currmonth);\n    \n        // console.log(this.ebillData);\n    this._utils.addEbill(this.ebillData)\n    .subscribe(\n      res=>{\n        console.log(res);\n       \n        if(this.ebillForm.get('paymentfreq').value ==\"Monthly\"){\n            if(this.currmonth ==11 && this.ebillForm.get('paymentdate').value< this.currDate ){\n              this.scheduledmonth=0;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.ebillForm.get('paymentdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth +1;\n              this.scheduledyear=this.curryear;\n            }\n         }\n         if(this.ebillForm.get('paymentfreq').value ==\"Bimonthly\"){\n            if(this.currmonth ==11|| this.currmonth ==10 && this.ebillForm.get('paymentdate').value< this.currDate ){\n              this.scheduledmonth=1;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.ebillForm.get('paymentdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth+2;\n              this.scheduledyear=this.curryear;\n            }\n         }\n       \n        this.scheduledday=this.ebillForm.get('paymentdate').value;\n    \n        this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday);\n    \n        console.log(\"Scheduled date is \"+ this.scheduleddate);\n        this.task= {userID:this.userID,email:this.useremail,servicetype:'eb',scheduleddate:this.scheduleddate,completed:false};\n        console.log(this.task);\n        this._utils.addTask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              if(pay){\n                this._router.navigate(['/payment']);\n              }\n              else\n              {\n                this._router.navigate(['/profile']);\n              }\n              \n            },\n            err=>{\n            console.log(err);\n            }\n          )\n       \n      },\n      err=>{\n        console.log(err);\n        //handle server side errors\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n           if(err.status === 422){\n            this.ebillForm.get('paymentdate').setErrors({ serverError: validationError}); \n          }\n        }\n\n\n      }\n    )\n\n\n  }\n\n  \n}\n","<div class=\"table\" id=\"maintable\">\n<div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n<div class=\"row\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card rounded-0\" id=\"main\">\n            <div class=\"card-header\">\n                <h3 class=\"mb-0\">Electricity bill payment service</h3>\n            </div>\n            \n            <div class=\"card-body\">\n                <form  class=\"form\"  [formGroup]=\"ebillForm\"  >\n                    <div class=\"form-group\">\n                        <label for=\"consumer\">Consumer Number: </label>\n                        <input type=\"text\"  formControlName= \"consumer\" name=\"consumer\" id=\"consumer\" class=\"form-control rounded-0\" >\n                        <div *ngIf= \"ebillForm.get('consumer').invalid && ebillForm.get('consumer').touched\">\n                            <small *ngIf = \"ebillForm.get('consumer').errors?.required\" class=\"text-white\" >Consumer Number is required</small>\n                           \n                        </div>\n                    </div>\n                    <div class=\"form-group\" >\n                        <label for=\"frequency\">Payment Frequency: </label>\n                        <select  name=\"paymentfreq\" id=\"paymentfreq\" class=\"form-control rounded-0\" formControlName=\"paymentfreq\" > \n                           <option *ngFor=\"let paymentfreq of freqoptions\" [ngValue]=\"paymentfreq\">{{paymentfreq}}</option> \n                    \n                        </select>\n          \n                        <div *ngIf= \"ebillForm.get('paymentfreq').invalid && ebillForm.get('paymentfreq').touched\">\n                            <small *ngIf = \"ebillForm.get('paymentfreq').errors?.required\" class=\"text-white\" >Payment Frequency is required</small>\n                            \n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"paymentdate\">Payment Date: </label>\n                        \n                     \n                        <select  name=\"paymentdate\" id=\"paymentdate\" class=\"form-control rounded-0\" formControlName=\"paymentdate\" > \n                            <option *ngFor=\"let paymentdate of numbers\" [ngValue]=\"paymentdate\">{{paymentdate}}</option> \n                     \n                         </select>\n                        <div *ngIf= \"ebillForm.get('paymentdate').invalid && ebillForm.get('paymentdate').touched\">\n                            <small *ngIf = \"ebillForm.get('paymentdate').errors?.required\" class=\"text-white\" >Payment Date is required</small>\n                            <small *ngIf = \"ebillForm.get('paymentdate').errors?.serverError\" class=\"text-white\" >{{ebillForm.get('paymentdate').errors?.serverError}}</small>\n                        </div>\n                       \n                    </div>\n                    <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                    <button type=\"button\"  [disabled]=\"ebillForm.invalid\" (click)=\"subscribe(false)\" class=\"btn btn-success float-right\">Submit</button>\n                    <!-- <button type=\"button\"  [disabled]=\"ebillForm.invalid\" (click)=\"subscribe(true)\" class=\"btn btn-success float-right\">Submit and Pay</button> -->\n        \n        \n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport {User} from '../profile/User.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  loggedinuserID;\n\n  constructor(private fb:FormBuilder,private _auth: AuthService,private router:Router) { }\n\n  profile=new User(null,null,null,null);\n\n  editProfileForm=this.fb.group(\n    {\n      name:['',Validators.required],\n      address:['',Validators.required],\n     \n    contact:['',[ Validators.required,Validators.minLength(10),  \n      Validators.maxLength(12),  \n      Validators.pattern('^[0-9]*$')]]\n    \n    }\n    )\n\n  ngOnInit(): void {\n\n    this.loggedinuserID=this._auth.getLoggedInUserID();\n    this._auth.getUserDetails(this.loggedinuserID)\n    .subscribe(\n      res=>{\n        this.profile=JSON.parse(JSON.stringify(res));\n        \n      },\n      err=>{\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n     \n          console.log(validationError);\n        }\n      }\n\n    )\n    \n  }\n\n  saveUser(){\n    this._auth.saveUser(this.profile)\n    .subscribe(data=>console.log(data))\n    this.router.navigate(['/profile']);\n  }\n}\n","\n <div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n<div class=\"row\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-5\">\n\n                <div class=\"card rounded-0\" id=\"main\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Edit User Details</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\" [formGroup]=\"editProfileForm\" (ngSubmit)=\"saveUser()\">\n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Name: </label>\n                                <input type=\"text\" formControlName=\"name\" [class.is-invalid] = \"editProfileForm.get('name').invalid && editProfileForm.get('name').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"profile.name\"  name=\"name\" id=\"name\">\n                                <div *ngIf= \"editProfileForm.get('name').invalid && editProfileForm.get('name').touched\">\n                                    <small *ngIf = \"editProfileForm.get('name').errors?.required\" class=\"text-white\" >Name is required</small>\n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Address: </label>\n                                <input type=\"text\" formControlName=\"address\" [class.is-invalid] = \"editProfileForm.get('address').invalid && editProfileForm.get('address').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"profile.address\"  name=\"address\" id=\"address\">\n                                <div *ngIf= \"editProfileForm.get('address').invalid && editProfileForm.get('address').touched\">\n                                    <small *ngIf = \"editProfileForm.get('address').errors?.required\" class=\"text-white\" >Address is required</small>\n                                    <small *ngIf = \"editProfileForm.get('address').errors?.pattern\" class=\"text-white\" >Enter a valid address</small>\n                                    <small *ngIf = \"editProfileForm.get('address').errors?.serverError\" class=\"text-white\" >{{editProfileForm.get('address').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Contact Number: </label>\n                                <input type=\"text\" formControlName=\"contact\" [class.is-invalid] = \"editProfileForm.get('contact').invalid && editProfileForm.get('contact').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"profile.contact\"  name=\"contact\" id=\"contact\">\n                                <div *ngIf= \"editProfileForm.get('contact').invalid && editProfileForm.get('contact').touched\">\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.required\" class=\"text-white\" >Contact is required</small>\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.pattern\" class=\"text-white\" >Only numbers are allowed. </small>\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.minlength\" class=\"text-white\" >Contact number should have atleast 10 numbers. </small>\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.maxlength\" class=\"text-white\" >Contact number can have max 12 numbers. </small>\n                                </div>\n                            </div>\n                            <br>\n                            <br>\n                            <div>\n                                <button type=\"submit\" [disabled]='editProfileForm.invalid' class=\"btn btn-success float-right\"(click)=\"saveUser()\">Update</button>\n                                <button type=\"button\" class=\"btn btn-success float-right mr-2\" routerLink=\"/profile\">Cancel</button>\n                            </div>\n                            <br>\n                            <br>\n                            <br>\n\n                        </form> \n                    </div>\n                </div>\n                   \n        \n    </div>\n    <div class=\"col-md-4\"></div>\n</div>\n    </div>\n </div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<footer class=\"footer fixed-bottom footer-big footer-color-black \" data-color=\"black\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-2 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\">Company</h5>\n                    <nav>\n                        <ul>\n                            <li>\n                                <a href=\"#\">Home</a></li>\n                        \n                            <li>\n                                <a href=\"#\">About Us</a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <div class=\"col-md-3 col-md-offset-1 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\"> Help and Support</h5>\n                     <nav>\n                        <ul>\n                            <li>\n                                <a href=\"#\">Contact Us</a>\n                            </li>\n                  \n                            <li>\n                                <a href=\"#\">Money Back</a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <div class=\"col-md-3 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\">Latest News</h5>\n                    <nav>\n                        <ul>\n                           \n                            <li>\n                                <a href=\"#\">\n                                    <i class=\"fa fa-twitter\"></i> We've just been featured on <b> Awwwards Website</b>! Thank you everybody for...\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <div class=\"col-md-2 col-md-offset-1 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\">Follow us on</h5>\n                    <nav>\n                        <ul>\n                            <li>\n                                <a href=\"#\" class=\"btn btn-social btn-facebook btn-simple\">\n                                    <i class=\"fa fa-facebook-square\"></i> Facebook\n                                </a>\n                            </li>\n                          \n                            <li>\n                                <a href=\"#\" class=\"btn btn-social btn-twitter btn-simple\">\n                                    <i class=\"fa fa-twitter\"></i> Twitter\n                                </a>\n                            </li>\n                            \n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"copyright\">\n             © <script> document.write(new Date().getFullYear()) </script>CALMS\n        </div>\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private _router:Router,public _auth:AuthService) { }\n\n  ngOnInit(): void {\n\n    console.log(this._auth.isAdmin());\n  }\n\n  logoutUser(){\n      localStorage.removeItem('CALMSuserID');\n      localStorage.removeItem('CALMSemail');\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAdmin');\n    this._router.navigate(['/login']);\n  }\n\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\n    <a class=\"navbar-brand\" href=\"\">\n    <img src=\"../../assets/logo.png\" width=\"100\" height=\"\" alt=\"Logo\" loading=\"lazy\">\n    </a>\n    <ul class=\"navbar-nav ml-auto\">\n        <a class=\"nav-link\" routerLink=\"\"  >Home</a>\n        <a class=\"nav-link\" routerLink=\"/register\" *ngIf= \"!_auth.loggedIn()\"> Register</a>\n        <a class=\"nav-link\" routerLink=\"/profile\" *ngIf= \"_auth.loggedIn() && !_auth.isAdmin()\">Profile</a>\n        <a class=\"nav-link\" routerLink=\"/serviceshome\" *ngIf= \"_auth.loggedIn() && !_auth.isAdmin()\">Services</a>\n        <a class=\"nav-link\" routerLink=\"/tasks\" *ngIf= \"_auth.isAdmin() && _auth.loggedIn()\">Tasks</a>\n        <a class=\"nav-link\" routerLink=\"/users\" *ngIf= \"_auth.isAdmin() && _auth.loggedIn()\">Users</a>\n        <a class=\"nav-link\" routerLink=\"/login\" *ngIf= \"!_auth.loggedIn()\" >Login</a>\n        <a class=\"nav-link\"  style=\"cursor:pointer\" *ngIf= \"_auth.loggedIn()\" (click)=\"logoutUser()\">Logout</a>\n        \n    </ul>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section section-header\" >\n    <div class=\"parallax filter filter-color-red\" >\n        <div class=\"image\" style=\"background-image: url('../../assets/images/header.jpg')\"></div>\n        <div class=\"container\" >\n\n        \n            <div class=\"content\">\n                        \n                <div class=\"title-area\" >\n                    <p>A One Stop Solution for Utility Payments and Medical assistance for the Elderly  </p>\n                    <h1 class=\"title-modern\">CALMS</h1>\n                    <h3>Citizen Assisted Living Management System</h3>\n                    <div class=\"separator line-separator\">♦</div>\n                \n                </div>   \n            </div>\n        </div>\n     \n        \n    </div>\n    \n</div>\n\n\n<div class=\"section\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"title-area\">\n                <h2>Our Services</h2>\n                <div class=\"separator separator-danger\">✻</div>\n                <p class=\"description\">We promise you the best services, a kind and friendly attitude. We build that by getting to know you, your needs and creating the most ideal platform for you to easily manage your home needs and personal needs.</p>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                  \n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/electric.png\" alt=\"\">\n                    </div>\n                    <h3>Electricity Bill payments</h3>\n                    <p class=\"description\">Paying electricity bill online is the most helpful option, you can pay anywhere & anytime without jumping the deadline. We can pay your EB bill without missing out the last date of electricity bill payment that leads to extra payment of late charges. We offer a convenient platform for hassle-free bill payment.</p>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/medical-1.png\" alt=\"\">\n                    </div>\n                    <h3>Medical Services</h3>\n                    <p class=\"description\">We have tied with up Apollo Diagnostics who offer the sheer convenience of Home Sample Collection.\n                        On receiving a call, Apollo’s trained technicians arrive at the doorstep of the patient to collect samples. Home collection is completely free of cost and reports can be mailed to you or can be delivered at home (On Chargeable Basis) the very next day.</p>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/quality.png\" alt=\"\">\n                    </div>\n                    <h3>Adherence to Standards</h3>\n                    <p class=\"description\">We observe standardized processes and security guidelines for on-us and off-us bill collections.\n                        Customer satisfaction is our key priority, and so all our process are audited on an annual basis. We ensure the top standards in customer interaction,\n                        timely payment and communicating with you in case of any issues\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n               \n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/receipt.png\" alt=\"\">\n                    </div>\n                    <h3>Instant Confirmation</h3>\n                    <p class=\"description\">We furnish instant payment confirmation receipt in the form of email. </p>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n               \n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"section section-our-team-freebie\">\n    <div class=\"parallax filter filter-color-grey\">\n        <div class=\"image\" style=\"background-image:url('../../assets/images/office-1.jpeg')\">\n        </div>\n        <div class=\"container\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <div class=\"title-area\">\n                        <h2>Who We Are</h2>\n                        <div class=\"separator separator-danger\">✻</div>\n                        <p class=\"description\">We are a young, dynamic service oriented team, focussed on alleviating the concerns of the elderly .</p>\n                    </div>\n                </div>\n\n                <div class=\"team\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-md-offset-1\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"card card-member\">\n                                        <div class=\"content\">\n                                            <div class=\"avatar avatar-danger\">\n                                                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_1.jpg\"/>\n                                            </div>\n                                            <div class=\"description\">\n                                                <h3 class=\"title\">Jayce</h3>\n                                                <p class=\"small-text\">CEO / Co-Founder</p>\n                                                <p class=\"description\">My passion is people and technology and I love collaborating to bring these two passions together.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <div class=\"card card-member\">\n                                        <div class=\"content\">\n                                            <div class=\"avatar avatar-danger\">\n                                                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_2.jpg\"/>\n                                            </div>\n                                            <div class=\"description\">\n                                                <h3 class=\"title\">Ashish</h3>\n                                                <p class=\"small-text\">Product Designer</p>\n                                                <p class=\"description\">I am a software consultant, and love to design and bring ideas to life through innovative designs.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <div class=\"card card-member\">\n                                        <div class=\"content\">\n                                            <div class=\"avatar avatar-danger\">\n                                                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_3.jpg\"/>\n                                            </div>\n                                            <div class=\"description\">\n                                                <h3 class=\"title\">Susan</h3>\n                                                <p class=\"small-text\">Marketing Pro</p>\n                                                <p class=\"description\">I am a business grad, passionate about connecting the technology advancements with people.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"section section-our-clients-freebie \">\n    <div class=\"container\">\n        <div class=\"title-area\">\n            <h5 class=\"subtitle text-gray\">Here are some</h5>\n            <h2>Clients Testimonials</h2>\n            <div class=\"separator separator-danger\">∎</div>\n        </div>\n        <div id=\"testimonials\">\n            <div class=\"avatar avatar-danger\">\n                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_4.jpg\"/>\n            </div>\n    </div>\n    <div class=\"tab-content\">\n            <div class=\"tab-pane active\" id=\"testimonial1\">\n                <p class=\"description\">\n                   I am a client of CALMS for the past 1 year. I am very satisfied with their consistent, timely services and polite attitude.\n                I recommend this website to all who want to have hassle free utility services as a gift for their parents.\n                </p>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\n\n@Component({\n  selector: 'app-lab-edit',\n  templateUrl: './lab-edit.component.html',\n  styleUrls: ['./lab-edit.component.css']\n})\nexport class LabEditComponent implements OnInit {\n\n  \n  numbers:Number[]=[];\n  useremail ;\n  freqoptions;\n  selectedFreq;\n  userID;\n  \n   \n  labdetail= {userID:\"\",email:\"\",registeredDate:null,testname:\"\",visitfreq:\"\",visitdate:null};\n // today:String;\n nowDate:Date;\n task=new Task(\"\",\"\",\"\",null,false);\n scheduleddate:Date;\n //to calculate scheduled date of task\n currmonth;\n scheduledmonth;\n curryear;\n scheduledyear;\n currDate;\n scheduledday;\n   \n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n  \n   }\n  \n\n   labForm= this.fb.group(\n    {\n      testname:['',[Validators.required]],\n      visitfreq:['',[Validators.required]],\n      visitdate:['',[Validators.required]],\n\n  })\n\n  ngOnInit(): void {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n\n    this.userID=this._auth.getLoggedInUserID();\n    this._utils.getLabService(this.userID.toString())\n    .subscribe(\n      res=>{\n        console.log(res);\n          this.labdetail= JSON.parse(JSON.stringify(res));\n          this.labdetail.userID=this.userID.toString();\n          \n      },\n      err=>{\n        console.log(err);\n      }\n\n    )\n  }\n\n  update(){\n\n    this.useremail  = this._auth.getLoggedInUseremail();\n    this.userID  = this._auth.getLoggedInUserID();\n    this.nowDate= new Date();  \n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n    console.log(this.currmonth);\n    \n    // this.labdetail={userID:this.userID.toString(), testname:this.labForm.get('testname').value,\n    // visitfreq:this.labForm.get('visitfreq').value,visitdate:this.labForm.get('visitdate').value};\n\n    this._utils.updateLabservice(this.labdetail)\n    .subscribe(\n        res=>{\n          console.log(res);\n          \n          if(this.labForm.get('visitdate').touched || this.labForm.get('visitfreq').touched){\n\n            if(this.labForm.get('visitfreq').value ==\"Monthly\"){\n              if(this.currmonth ==11 && this.labForm.get('visitdate').value< this.currDate ){\n                this.scheduledmonth=0;\n                this.scheduledyear=this.curryear+1;\n              }\n              else if(this.labForm.get('visitdate').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                this.scheduledmonth=this.currmonth +1;\n                this.scheduledyear=this.curryear;\n              }\n           }\n           if(this.labForm.get('visitfreq').value ==\"Bimonthly\"){\n              if(this.currmonth ==11|| this.currmonth ==10 && this.labForm.get('visitdate').value< this.currDate ){\n                this.scheduledmonth=1;\n                this.scheduledyear=this.curryear+1;\n              }\n              else if(this.labForm.get('visitdate').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                this.scheduledmonth=this.currmonth+2;\n                this.scheduledyear=this.curryear;\n              }\n           }\n           this.scheduledday=this.labForm.get('visitdate').value;\n    \n           this.task= {userID:this.userID,email:this.useremail,servicetype:'lab',scheduleddate:new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday),completed:false};\n        \n        this._utils.updatetask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              this._router.navigate(['/profile']);\n            },\n            err=>{\n            console.log(err);\n            }\n          )\n                       \n          }\n          \n        \n       \n        },\n        err=>{\n          console.log(err);\n        }\n\n    )\n\n\n  }\n\n}\n","\n<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n            <div class=\"col-md-4\"></div>\n            <div class=\"col-md-4\">\n                <div class=\"card rounded-0\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Lab @ Home service</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\"  [formGroup]=\"labForm\"  (ngSubmit)=\"update()\">\n                            <div class=\"form-group\">\n                                <label for=\"testname\">Test Name: </label>\n                                <input type=\"text\"  formControlName= \"testname\" name=\"testname\" id=\"testname\" class=\"form-control rounded-0\" [(ngModel)]='labdetail.testname' >\n                                <div *ngIf= \"labForm.get('testname').invalid && labForm.get('testname').touched\">\n                                    <small *ngIf = \"labForm.get('testname').errors?.required\" class=\"text-white\" >Test Name is required</small>\n                                   \n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group\" >\n                                <label for=\"visitfreq\">Visit Frequency: </label>\n                                <select  name=\"visitfreq\" id=\"visitfreq\" class=\"form-control rounded-0\" formControlName=\"visitfreq\" [(ngModel)]='labdetail.visitfreq' > \n                                   <option *ngFor=\"let visitfreq of freqoptions\" [ngValue]=\"visitfreq\">{{visitfreq}}</option> \n                            \n                                </select>\n                  \n                                <div *ngIf= \"labForm.get('visitfreq').invalid && labForm.get('visitfreq').touched\">\n                                    <small *ngIf = \"labForm.get('visitfreq').errors?.required\" class=\"text-white\" >Visit Frequency is required</small>\n                                    \n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"visitdate\">Visit Date: </label>\n                                \n                             \n                                <select  name=\"visitdate\" id=\"visitdate\" class=\"form-control rounded-0\" formControlName=\"visitdate\" [(ngModel)]='labdetail.visitdate'> \n                                    <option *ngFor=\"let visitdate of numbers\" [ngValue]=\"visitdate\">{{visitdate}}</option> \n                             \n                                 </select>\n                                <div *ngIf= \"labForm.get('visitdate').invalid && labForm.get('visitdate').touched\">\n                                    <small *ngIf = \"labForm.get('visitdate').errors?.required\" class=\"text-white\" >Visitng Date is required</small>\n                                    <small *ngIf = \"labForm.get('visitdate').errors?.serverError\" class=\"text-white\" >{{labForm.get('visitdate').errors?.serverError}}</small>\n                                </div>\n                               \n                            </div>\n                            <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                            <button type=\"submit\"  [disabled]=\"labForm.invalid\"  class=\"btn btn-success float-right\">Submit</button>\n                \n                \n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-4\"></div>\n        </div>\n    </div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\nimport {Labdetail} from '../lab-home/labdetail.model';\n\n\n@Component({\n  selector: 'app-lab-home',\n  templateUrl: './lab-home.component.html',\n  styleUrls: ['./lab-home.component.css']\n})\nexport class LabHomeComponent implements OnInit {\n\n  \n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n   }\n  \n   numbers:Number[]=[];\n   useremail ;\n   freqoptions;\n   selectedFreq;\n   userID;\n   labdetail:Labdetail= new Labdetail(\"\", \"\",\"\",null, \"\",null);\n  // today:String;\n  nowDate:Date;\n  task=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  //to calculate scheduled date of task\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\nscheduledday;\n\n   labForm= this.fb.group(\n    {\n      testname:['',[Validators.required]],\n      visitfreq:['',[Validators.required]],\n      visitdate:['',[Validators.required]],\n\n  })\n\n  ngOnInit(): void {\n  }\n\n  subscribe(){\n\n    \n    this.useremail  = this._auth.getLoggedInUseremail();\n    this.userID  = this._auth.getLoggedInUserID();\n    this.nowDate= new Date();  \n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n    console.log(this.currmonth);\n    \n    this.labdetail={userID:this.userID, email:this.useremail,registeredDate:this.nowDate, testname:this.labForm.get('testname').value,\n    visitfreq:this.labForm.get('visitfreq').value,visitdate:this.labForm.get('visitdate').value};\n\n    this._utils.addlabservice(this.labdetail)\n    .subscribe(\n        res=>{\n          console.log(res);\n          if(this.labForm.get('visitfreq').value ==\"Monthly\"){\n            if(this.currmonth ==11 && this.labForm.get('visitdate').value< this.currDate ){\n              this.scheduledmonth=0;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.labForm.get('visitdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth +1;\n              this.scheduledyear=this.curryear;\n            }\n         }\n         if(this.labForm.get('visitfreq').value ==\"Bimonthly\"){\n            if(this.currmonth ==11|| this.currmonth ==10 && this.labForm.get('visitdate').value< this.currDate ){\n              this.scheduledmonth=1;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.labForm.get('visitdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth+2;\n              this.scheduledyear=this.curryear;\n            }\n         }\n       \n        this.scheduledday=this.labForm.get('visitdate').value;\n    \n        // this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday);\n    console.log(this.scheduledmonth);\n    console.log(this.scheduledday);\n    console.log(this.scheduleddate);\n        console.log(\"Scheduled date is \"+ this.scheduleddate);\n        this.task= {userID:this.userID,email:this.useremail,servicetype:'lab',scheduleddate:new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday),completed:false};\n        \n        this._utils.addTask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              this._router.navigate(['/profile']);\n            },\n            err=>{\n            console.log(err);\n            }\n          )\n       \n        },\n        err=>{\n          console.log(err);\n        }\n\n    )\n\n\n  }\n}\n","<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n<div class=\"row\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card rounded-0\" id=\"main\">\n            <div class=\"card-header\">\n                <h3 class=\"mb-0\">Lab @ Home service</h3>\n            </div>\n            \n            <div class=\"card-body\">\n                <form  class=\"form\"  [formGroup]=\"labForm\"  (ngSubmit)=\"subscribe()\">\n                    <div class=\"form-group\">\n                        <label for=\"testname\">Test Name: </label>\n                        <input type=\"text\"  formControlName= \"testname\" name=\"testname\" id=\"testname\" class=\"form-control rounded-0\" >\n                        <div *ngIf= \"labForm.get('testname').invalid && labForm.get('testname').touched\">\n                            <small *ngIf = \"labForm.get('testname').errors?.required\" class=\"text-white\" >Lab Name is required</small>\n                           \n                        </div>\n                    </div>\n                    \n                    <div class=\"form-group\" >\n                        <label for=\"visitfreq\">Visit Frequency: </label>\n                        <select  name=\"visitfreq\" id=\"visitfreq\" class=\"form-control rounded-0\" formControlName=\"visitfreq\" > \n                           <option *ngFor=\"let visitfreq of freqoptions\" [ngValue]=\"visitfreq\">{{visitfreq}}</option> \n                    \n                        </select>\n          \n                        <div *ngIf= \"labForm.get('visitfreq').invalid && labForm.get('visitfreq').touched\">\n                            <small *ngIf = \"labForm.get('visitfreq').errors?.required\" class=\"text-white\" >Visit Frequency is required</small>\n                            \n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"visitdate\">Visit Date: </label>\n                        \n                     \n                        <select  name=\"visitdate\" id=\"visitdate\" class=\"form-control rounded-0\" formControlName=\"visitdate\" > \n                            <option *ngFor=\"let visitdate of numbers\" [ngValue]=\"visitdate\">{{visitdate}}</option> \n                     \n                         </select>\n                        <div *ngIf= \"labForm.get('visitdate').invalid && labForm.get('visitdate').touched\">\n                            <small *ngIf = \"labForm.get('visitdate').errors?.required\" class=\"text-white\" >Visitng Date is required</small>\n                            <small *ngIf = \"labForm.get('visitdate').errors?.serverError\" class=\"text-white\" >{{labForm.get('visitdate').errors?.serverError}}</small>\n                        </div>\n                       \n                    </div>\n                    <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                    <button type=\"submit\"  [disabled]=\"labForm.invalid\"  class=\"btn btn-success float-right\">Submit</button>\n        \n        \n                </form>\n            </div>\n        </div>\n        \n    </div>\n    <div class=\"col-md-4\"></div>\n</div>\n</div>\n</div>\n","export class Labdetail{\r\n\r\n    constructor(\r\n        public email:String,\r\n        public testname:String,\r\n        public visitfreq:String,\r\n        public visitdate:Number,\r\n        public userID:String,\r\n        public registeredDate:Date\r\n            \r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthService } from '../auth.service';\nimport {Router} from '@angular/router';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n \n  loginForm = this.fb.group(\n\n    { email :['',[Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'),Validators.required]],\n    password:['',[Validators.minLength(6),Validators.required]]\n    }\n\n  )\n  \n  loginUserDetails={email:\"\",password:\"\"};\n  isAdmin:Boolean=false;\n  constructor(private _auth:AuthService,private _router:Router,private fb:FormBuilder) { }\n\n  loginUser(){\n    this._auth.loginUser(this.loginUserDetails)\n    .subscribe(\n      res=>{\n        console.log(res);\n        \n        localStorage.setItem('token',res['token']);\n        localStorage.setItem('CALMSuserID',res['id']);\n        localStorage.setItem('CALMSemail',res['email']);\n\n        if(res['isAdmin']==true){\n          localStorage.setItem('isAdmin',res['isAdmin']);\n          this._router.navigate(['/tasks']);\n        }\n        else{\n           this._router.navigate(['/profile']);\n        }\n      },\n      // err=>console.log(err);\n      err=>{\n        //handle server side errors\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n          if(err.status === 401) {\n            this.loginForm.get('password').setErrors({ serverError: validationError}); \n          }\n          else if(err.status === 422){\n            this.loginForm.get('email').setErrors({ serverError: validationError}); \n          }\n        }\n\n        }\n        \n    )\n  \n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","\n\n <div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n\n            <div class=\"col-md-4\"></div>\n            <div class=\"col-md-4\">\n\n                <div class=\"card rounded-0\" id=\"main\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Login</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n                            <div class=\"form-group\">\n                                <label for=\"uname1\" style=\"font-size:20px;font-weight:bold;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\">Email: </label>\n                                <input type=\"email\" formControlName=\"email\" [class.is-invalid] = \"loginForm.get('email').invalid && loginForm.get('email').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"loginUserDetails.email\"  name=\"email\" id=\"email\">\n                                <div *ngIf= \"loginForm.get('email').invalid && loginForm.get('email').touched\">\n                                    <small *ngIf = \"loginForm.get('email').errors?.required\" class=\"text-white\" >Email is required</small>\n                                    <small *ngIf = \"loginForm.get('email').errors?.pattern\" class=\"text-white\" >Enter a valid email</small>\n                                    <small *ngIf = \"loginForm.get('email').errors?.serverError\" class=\"text-white\" >{{loginForm.get('email').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\" style=\"font-size:20px;font-weight:bold;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\" >Password: </label>\n                                <input type=\"password\"  formControlName=\"password\" [class.is-invalid] = \"loginForm.get('password').invalid && loginForm.get('password').touched\" class=\"form-control rounded-0\"  [(ngModel)]=\"loginUserDetails.password\" name=\"password\" id=\"password\">\n                                <div *ngIf= \"loginForm.get('password').invalid && loginForm.get('password').touched\">\n                                    <small *ngIf = \"loginForm.get('password').errors?.required\" class=\"text-white\" >Password is required</small>\n                                    <small *ngIf = \"loginForm.get('password').errors?.minlength\" class=\"text-white\" >Minimum length of password is 6</small>\n                                    <small *ngIf = \"loginForm.get('password').errors?.serverError\" class=\"text-white\" >{{loginForm.get('password').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <br>\n                            <br>\n                            <button type=\"submit\" [disabled]='loginForm.invalid' class=\"btn btn-success btn-lg float-right\">Login</button>\n                        </form> \n                    </div>\n                </div>\n                \n                \n            </div>\n            <div class=\"col-md-4\"></div>\n        </div>\n    </div>\n </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"well col-xs-10 col-sm-10 col-md-6 col-xs-offset-1 col-sm-offset-1 col-md-offset-3\">\n            <div class=\"row\">\n                <div class=\"col-xs-6 col-sm-6 col-md-6\">\n                    <address>\n                        <strong>Elf Cafe</strong>\n                        <br>\n                        2135 Sunset Blvd\n                        <br>\n                        Los Angeles, CA 90026\n                        <br>\n                        <abbr title=\"Phone\">P:</abbr> (213) 484-6829\n                    </address>\n                </div>\n                <div class=\"col-xs-6 col-sm-6 col-md-6 text-right\">\n                    <p>\n                        <em>Date: 1st November, 2013</em>\n                    </p>\n                    <p>\n                        <em>Receipt #: 34522677W</em>\n                    </p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"text-center\">\n                    <h1>Receipt</h1>\n                </div>\n                \n                <table class=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>#</th>\n                            <th class=\"text-center\">Price</th>\n                            <th class=\"text-center\">Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td class=\"col-md-9\"><h4><em>Baked Rodopa Sheep Feta</em></h4></td>\n                            <td class=\"col-md-1\" style=\"text-align: center\"> 2 </td>\n                            <td class=\"col-md-1 text-center\">$13</td>\n                            <td class=\"col-md-1 text-center\">$26</td>\n                        </tr>\n                        <tr>\n                            <td class=\"col-md-9\"><h4><em>Lebanese Cabbage Salad</em></h4></td>\n                            <td class=\"col-md-1\" style=\"text-align: center\"> 1 </td>\n                            <td class=\"col-md-1 text-center\">$8</td>\n                            <td class=\"col-md-1 text-center\">$8</td>\n                        </tr>\n                        <tr>\n                            <td class=\"col-md-9\"><h4><em>Baked Tart with Thyme and Garlic</em></h4></td>\n                            <td class=\"col-md-1\" style=\"text-align: center\"> 3 </td>\n                            <td class=\"col-md-1 text-center\">$16</td>\n                            <td class=\"col-md-1 text-center\">$48</td>\n                        </tr>\n                        <tr>\n                            <td>   </td>\n                            <td>   </td>\n                            <td class=\"text-right\">\n                            <p>\n                                <strong>Subtotal: </strong>\n                            </p>\n                            <p>\n                                <strong>Tax: </strong>\n                            </p></td>\n                            <td class=\"text-center\">\n                            <p>\n                                <strong>$6.94</strong>\n                            </p>\n                            <p>\n                                <strong>$6.94</strong>\n                            </p></td>\n                        </tr>\n                        <tr>\n                            <td>   </td>\n                            <td>   </td>\n                            <td class=\"text-right\"><h4><strong>Total: </strong></h4></td>\n                            <td class=\"text-center text-danger\"><h4><strong>$31.53</strong></h4></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button type=\"button\" class=\"btn btn-success btn-lg btn-block\">\n                    Pay Now   <span class=\"glyphicon glyphicon-chevron-right\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","export class User{\r\n\r\nconstructor(\r\n\r\npublic email:String,\r\npublic name:String,\r\npublic address: String,\r\npublic contact:Number\r\n\r\n){}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {User} from './User.model';\nimport {UtilsService} from '../utils.service';\nimport {Service} from './service.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private _auth: AuthService,private _utils:UtilsService, private _route:Router) { }\n  \n  userID;\n  user =new User(null,null,null,null);\n  ebdata;\n  services:Service[]=[];\n  service= new Service(null,null,false,false);\n  serviceType;\n  labdata;\n  \nngOnChanges():void{\n\n  this.loadServices(); \n  \n}\n\n  ngOnInit(): void {\n     this.loadServices();\n  }\n\n  loadServices(){\n    this.userID=localStorage.getItem('CALMSuserID');\n    this._auth.getUserDetails(this.userID.toString())\n    .subscribe(\n      res=>{\n        this.user = JSON.parse(JSON.stringify(res));\n        console.log(this.userID.toString());\n        //Get EB services details\n        this._utils.getEBService(this.userID.toString())\n        .subscribe(\n          res=>{\n            console.log(res);\n              this.ebdata= JSON.parse(JSON.stringify(res));\n              if(this.ebdata !=null){\n              this.service=new Service(\"Electricity Bill Payment\",this.ebdata.registeredDate,true,false);\n              this.services.push(this.service);\n              }\n              console.log(this.services);\n\n              //get Lab services details\n              this._utils.getLabService(this.userID.toString())\n              .subscribe(\n                  res=>{\n                      this.labdata=JSON.parse(JSON.stringify(res));\n                      console.log(this.labdata);\n                      if(this.labdata != null){\n                        this.service=new Service(\"Lab@Home service\",this.labdata.registeredDate,false,true);\n                        this.services.push(this.service);\n                      }\n                      console.log(this.services);\n                  },\n                  err=>{\n                    console.log(err);\n                  }\n\n\n\n\n              )\n\n          },\n          err=>{\n            console.log(err);\n          }\n\n        )\n        \n      },\n      err=>{\n          console.log(err);\n      }\n    )      \n  }\n\n  edit(type){\n    if(type==\"Electricity Bill Payment\"){\n      this._route.navigate(['/ebilledit']);\n    }\n    else if(type==\"Lab@Home service\"){\n      this._route.navigate(['/labedit']);\n    }\n  }\n  deletebill(type){\n\n    console.log(type);\n    if(type==\"Electricity Bill Payment\"){\n      this.serviceType=\"eb\";\n    }\n    else if(type==\"Lab@Home service\"){\n      this.serviceType=\"lab\";\n    }\n    \n    if(confirm(\"Are you sure you want to delete this service and related tasks?\")==true){\n      if(this.serviceType=='eb'){\n        \n      this._utils.deleteEBService(this.userID) \n      .subscribe((data)=>{\n                \n          \n        //  this.service=JSON.parse(JSON.stringify(data));\n        //  if(this.service !=null){\n        //   this.service=new Service(\"Electricity Bill Payment\",this.ebdata.registeredDate,true,false);\n        //   this.services.push(this.service);\n        //  }\n         \n         this._utils.deletetasksforuserandservicetype(this.userID,this.serviceType)\n         .subscribe(\n          res=>{\n            console.log(\"Tasks deleted\");\n            this.services=[];\n          this.loadServices();\n          },\n          err=>{\n            console.log(err);\n          }\n\n         )\n        console.log(data); \n      })\n      }\n\n      else if(this.serviceType=='lab'){\n        this._utils.deleteLabService(this.userID) \n        .subscribe((data)=>{\n                  \n             this.services=[];\n          //  this.service=JSON.parse(JSON.stringify(data));\n          //  if(this.service !=null){\n          //   this.service=new Service(\"Lab@Home Service\",this.labdata.registeredDate,false,true);\n          //   this.services.push(this.service);\n          //  }\n           \n           this._utils.deletetasksforuserandservicetype(this.userID,this.serviceType)\n           .subscribe(\n            res=>{\n              console.log(\"Tasks deleted\");\n              this.services=[];\n          this.loadServices();\n            },\n            err=>{\n              console.log(err);\n            }\n  \n           )\n          console.log(data); \n        })\n      }\n  }\n}\n}\n\n","\n<div id=\"top\" class=\"card mx-auto\">\n    <h3>CALMS Profile Page</h3>\n</div>\n<div class=\"card \">\n    <div class=\"row\">\n        \n\n      <div class=\"col-md-6\">\n          <br>\n          <br>\n        <h4> Personal Profile</h4>\n     \n          <div class=\"card-body\" >\n              <form >\n                  <label for=\"\">Name:</label>\n                  <label class=\"form-control\" for=\"\">{{user.name}}</label>\n                  <label for=\"\">Email:</label>\n                  <label class=\"form-control\" for=\"\">{{user.email}}</label>\n                  <label for=\"\">Address:</label>\n                  <label class=\"form-control\" for=\"\">{{user.address}}</label>\n                  <label for=\"\">Contact Number:</label>\n                  <label class=\"form-control\" for=\"\">{{user.contact}}</label>\n                  <br>\n                  <button type=\"submit\" class=\"float-right btn btn-primary\" routerLink=\"/editprofile\" >Edit User Details</button>\n              </form>\n          </div>\n      </div>\n      \n      <div class=\"col-md-6\">\n          \n        <br>\n        <br>\n           <h4> List of Enrolled Services</h4>\n        \n        <br>\n      \n             <div class=\"table-responsive\">\n                 <div class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Service Type</th>\n                            <th>Date of Registration</th>\n                            <th></th>\n                            <th><button class=\"btn btn-primary\" routerLink=\"/serviceshome\" >Add Service</button></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let service of services\">\n                            <td>{{service.type}}</td>\n                            <td>{{service.registereddate | date}}</td>\n                            <td><button class=\"btn btn-primary\" (click)=\"edit(service.type)\">Edit</button></td>\n                            \n                            <td><button class=\"btn btn-danger\" (click)=\"deletebill(service.type)\" >Delete</button></td>\n                        </tr>\n                    </tbody>\n                 </div>\n             </div>\n        </div>\n    </div>\n</div>\n\n \n\n\n","export class Service{\r\n\r\n    constructor(\r\n        public type:String,\r\n        public registereddate:Date,\r\n        public isEB:Boolean,\r\n        public isLab:Boolean\r\n    ){ }\r\n}","import { FormGroup } from '@angular/forms';\r\n    \r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthService } from '../auth.service';\nimport {Router} from '@angular/router';\nimport { FormGroup,FormBuilder,Validators} from '@angular/forms';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {ConfirmedValidator} from './confirmedvalidator';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  \n   registeredUser = {email:\"\", password:\"\",confpassword:\"\",name:\"\",address:\"\",contact:undefined};\n   passwordpattern = '^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9!@#$%^&*]+.{8,}$'\n\n  constructor(private _auth:AuthService,private _router:Router,private fb:FormBuilder) { }\n\n  // phonePattern = /^[0-9]{10,12}$/;\n  registerForm = this.fb.group(\n\n    { email :['',[Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'),Validators.required]],\n    // password:['',[Validators.minLength(6),Validators.required]],\n    password:['',[Validators.required,Validators.pattern(this.passwordpattern)]],\n    confpassword:['',[Validators.required]],\n    address:['',[Validators.required]],\n    name:['',[Validators.required]],\n    \n    contact:['',[ Validators.minLength(10),  \n      Validators.maxLength(12),  \n      Validators.pattern('^[0-9]*$')]]\n    },\n    { \n      validator: ConfirmedValidator('password', 'confpassword')\n    } \n  )\n\n  registerUser(){\n    this._auth.registerUser(this.registeredUser)\n    .subscribe(\n      res=>{\n        localStorage.setItem('token',res['token']);    \n        this._router.navigate(['/login']);\n      },\n      err=>{\n        console.log(err);\n        //handle server side errors\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n           if(err.status === 422){\n            this.registerForm.get('email').setErrors({ serverError: validationError}); \n          }\n        }\n\n\n      }\n    )\n  \n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n\n            <div class=\"col-md-4\"></div>\n\n            <div class=\"col-md-4\">\n            \n                <div class=\"card rounded-0\" id=\"main\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Register</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\"  [formGroup]=\"registerForm\"  (ngSubmit)=\"registerUser()\">\n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Email: </label>\n                                <input type=\"email\" formControlName=\"email\" [class.is-invalid] = \"registerForm.get('email').invalid && registerForm.get('email').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.email\"  name=\"email\" id=\"email\">\n                                <div *ngIf= \"registerForm.get('email').invalid && registerForm.get('email').touched\">\n                                    <small *ngIf = \"registerForm.get('email').errors?.required\" class=\"text-white\" >Email is required</small>\n                                    <small *ngIf = \"registerForm.get('email').errors?.pattern\" class=\"text-white\" >Enter a valid email</small>\n                                    <small *ngIf = \"registerForm.get('email').errors?.serverError\" class=\"text-white\" >{{registerForm.get('email').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\">Password: </label>\n                                <input type=\"password\"  formControlName=\"password\" [class.is-invalid] = \"registerForm.get('password').invalid && registerForm.get('password').touched\" class=\"form-control rounded-0\"  [(ngModel)]=\"registeredUser.password\" name=\"password\" id=\"password\">\n                                <div *ngIf= \"registerForm.get('password').invalid && registerForm.get('password').touched\">\n                                    <small *ngIf = \"registerForm.get('password').errors?.required\" class=\"text-white\" >Password is required</small>\n                                    <small *ngIf = \"registerForm.get('password').errors?.pattern\" class=\"text-white\" >Password should be at least 8 characters long and should contain one number,one upper case character, one lower case character.</small>\n                                    \n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\">Confirm Password: </label>\n                                <input type=\"password\"  formControlName=\"confpassword\" [class.is-invalid] = \"registerForm.get('confpassword').invalid && registerForm.get('confpassword').touched\" class=\"form-control rounded-0\"  [(ngModel)]=\"registeredUser.confpassword\" name=\"confpassword\" id=\"confpassword\" >\n                                <div *ngIf= \"registerForm.get('confpassword').invalid && registerForm.get('confpassword').touched\">\n                                    <small *ngIf = \"registerForm.get('confpassword').errors?.required\" class=\"text-white\" >Confirm Password is required</small>\n                                    <small *ngIf = \"registerForm.get('confpassword').errors?.pattern\" class=\"text-white\" >Password should be at least 8 characters long and should contain one number,one upper case character, one lower case character</small>\n                                    <small *ngIf = \"registerForm.get('confpassword').errors?.confirmedValidator\" class=\"text-white\" >Password and Confirm Password must match</small>\n                                    \n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"name\">Name: </label>\n                                <input type= \"text\" formControlName=\"name\" [class.is-invalid] = \"registerForm.get('name').invalid && registerForm.get('name').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.name\"  name=\"name\" id=\"name\">\n                                <div *ngIf= \"registerForm.get('name').invalid && registerForm.get('name').touched\">\n                                    <small *ngIf = \"registerForm.get('name').errors?.required\" class=\"text-white\" >Name is required</small>\n                                    <small *ngIf = \"registerForm.get('name').errors?.serverError\" class=\"text-white\" >{{registerForm.get('name').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"address\">Address: </label>\n                                <input type=\"text\" formControlName=\"address\" [class.is-invalid] = \"registerForm.get('address').invalid && registerForm.get('address').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.address\"  name=\"address\" id=\"address\">\n                                <div *ngIf= \"registerForm.get('address').invalid && registerForm.get('address').touched\">\n                                    <small *ngIf = \"registerForm.get('address').errors?.required\" class=\"text-white\" >Address is required</small>\n                                    <small *ngIf = \"registerForm.get('address').errors?.serverError\" class=\"text-white\" >{{registerForm.get('address').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"contact\">Contact Number: </label>\n                                <input type=\"text\" formControlName=\"contact\" [class.is-invalid] = \"registerForm.get('contact').invalid && registerForm.get('contact').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.contact\"  name=\"contact\" id=\"contact\">\n                                <div *ngIf= \"registerForm.get('contact').invalid && registerForm.get('contact').touched\">\n                                    <small *ngIf = \"registerForm.get('contact').errors?.required\" class=\"text-white\" >Contact number is required. </small>\n                                    <small *ngIf = \"registerForm.get('contact').errors?.pattern\" class=\"text-white\" >Only numbers are allowed. </small>\n                                    <small *ngIf = \"registerForm.get('contact').errors?.minlength\" class=\"text-white\" >Contact number should have atleast 10 numbers. </small>\n                                    <small *ngIf = \"registerForm.get('contact').errors?.maxlength\" class=\"text-white\" >Contact number can have max 12 numbers. </small>\n                                    \n                                </div>\n                            </div>\n                            <button type=\"submit\" [disabled]=\"registerForm.invalid\" class=\"btn btn-success float-right\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n            \n            </div>\n\n            <div class=\"col-md-4\"></div>\n            \n\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-services-home',\n  templateUrl: './services-home.component.html',\n  styleUrls: ['./services-home.component.css']\n})\nexport class ServicesHomeComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"row\">\n        <div class=\"col-md-6\" style=\"border: solid 1px white;\">\n            <div class=\"card-header\">\n                <h3>\n                    Introducing - CALMS Services\n                </h3>\n            </div>\n            <div  >\n                <h6 style=\"margin-left: 5px;\">CALMS has a vision of offering a wide varitey of services to make living in your own home hassle free\n                    and comfortable.</h6>\n                <br>\n                <br>\n                <ul>\n                    <li>Electricity Payment Service\n                    <p>Paying electricity bill online is the most helpful option, you can pay anywhere & anytime without jumping the deadline. We can pay your EB bill without missing out the last date of electricity bill payment that leads to extra payment of late charges.</p>\n                    <button class=\"btn btn-primary\" routerLink=\"ebillsubscribe\">Subscribe</button>\n                    </li>\n                </ul>\n             \n                <ul>\n                    <li>Lab@Home Service\n                    <p>We have tied with up Apollo Diagnostics who offer the sheer convenience of Home Sample Collection.\n                        On receiving a call, Apollo’s trained technicians arrive at the doorstep of the patient to collect samples. Home collection is completely free of cost and reports can be mailed to you or can be delivered at home (On Chargeable Basis) the very next day.</p>\n                    <button class=\"btn btn-primary\" routerLink=\"labsubscribe\">Subscribe</button>\n                    </li>\n                </ul>\n                <p style=\"color:black\"><b>Watch this space for more exciting services in the near future!</b></p>\n            \n            </div>\n           \n        </div>\n        <div class=\"col-md-6\"  style=\"border: solid 1px white;\">\n            <h5 style=\"margin-top: 20px;\">Here's a video of how the advancements of technology are assiting the elderly.</h5>\n            <br>\n            <div style=\"margin-left: 100px;\" >\n                \n                <youtube-player\n                videoId=\"lNWHS9Kok8Q\" \n                suggestedQuality=\"large\" \n                [height]=\"450\" \n                [width]=\"500\" \n                [startSeconds]=\"'4'\"\n                [endSeconds]=\"60\">\n                </youtube-player>\n                \n            </div>\n        </div>\n    </div>\n  \n           \n\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <!-- <div class=\"main\">\n    \n        <div class=\"bg-light border-right\" id=\"sidebar-wrapper\">\n            <div class=\"sidebar-heading\">CALMS Services  </div>\n            <div class=\"list-group list-group-flush\">\n            <a routerLink=\"ebillsubscribe\" class=\"list-group-item list-group-item-action bg-light\">Electricity Bill Payment</a>\n            <a routerLink=\"mbillsubscribe\" class=\"list-group-item list-group-item-action bg-light\">Mobile Bill Payment</a>\n           \n            </div>\n        </div>\n     \n   \n\n      <div class=\"right\">\n          <router-outlet></router-outlet>\n      </div>\n    </div> -->\n\n\n    <div class=\"main\">\n        <router-outlet></router-outlet>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {UtilsService} from '../utils.service';\nimport {TaskDetail} from '../tasks/taskdetail.model';\nimport {AuthService} from '../auth.service';\nimport {Task} from '../tasks/task.model';\n\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.css']\n})\nexport class TaskDetailComponent implements OnInit {\n\n  taskid;\n  task:TaskDetail = new TaskDetail(\"\",\"\",\"\",null,\"\",false,null,\"\",null);\n  taskdata;\n  ebdata;\n  userID ;\n  userDetails;\n  isEBservice=false;\n  isLabservice=false;\n  labdata;\n\n  //for setting scheduled date of new task\n  today:Date;\n  nowDate:Date;\n  newtask=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\n  scheduledday;\n   activedate:Date ;\n  mail={email:\"\",subject:\"\",text:\"\"};\n  frequency;\n  nextdate;\n  constructor(private route:ActivatedRoute,private _router:Router,private _utils :UtilsService,private _auth:AuthService)\n   {\n\n    this.route.params.subscribe(\n      params=>{\n          this.taskid = params['id'];\n          console.log(this.taskid);\n      })\n   \n      this._utils.getsingletask(this.taskid.toString())\n      .subscribe(\n        res=>{\n          this.taskdata = JSON.parse(JSON.stringify(res));\n          \n          if(this.taskdata.servicetype==\"eb\"){\n            this.isEBservice=true;\n          }\n          else if(this.taskdata.servicetype=='lab'){\n            this.isLabservice=true;\n          }\n\n          //populating the taskdetail \n          this.task.email= this.taskdata.email;\n          this.task.servicetype=this.taskdata.servicetype;\n          \n          this.task.scheduleddate=this.taskdata.scheduleddate;\n          this.task.completed=this.taskdata.completed;\n         this.userID = this.taskdata.userID;\n         this._auth.getUserDetails(this.userID.toString())\n         .subscribe(\n           res=> {\n               this.userDetails=JSON.parse(JSON.stringify(res));\n               this.task.contact=this.userDetails.contact;\n           },\n           err=>{\n             console.log(err)\n           })\n\n          if(this.isEBservice){\n            this._utils.getEBService(this.userID.toString())\n            .subscribe(\n              res=>{\n                this.ebdata = JSON.parse(JSON.stringify(res));\n                console.log(this.ebdata);\n                this.task.consumernum=this.ebdata.consumernum;\n                this.task.paymentfreq=this.ebdata.paymentfreq;\n                this.task.paymentdate=this.ebdata.dateofpayment;\n                  \n              },\n              err=>{\n                console.log(err);\n              })\n          }\n          else if(this.isLabservice){\n                this._utils.getLabService(this.userID.toString())\n                .subscribe(\n                    res=>{\n                      this.labdata=JSON.parse(JSON.stringify(res));\n                      this.task.testname= this.labdata.testname;\n                      this.task.paymentdate=this.labdata.visitdate;\n                      this.task.paymentfreq=this.labdata.visitfreq;\n                    },\n                    err=>{\n                      console.log(err);\n                    }\n\n                )\n          }\n          \n\n        },\n        err=>{\n            console.log(err);\n\n        })\n      \n\n\n    }\n\n  ngOnInit(): void {\n\n  }\n\n  completeTask(){\n    \n    \n        this.frequency = this.task.paymentfreq;\n        this.nextdate=this.task.paymentdate;\n   \n\n\n    if (confirm(\"An email confirmation will be sent to the client. Are you sure you want to continue?\") == true){\n      \n     \n    this.activedate= new Date(this.task.scheduleddate);\n    console.log(this.task.scheduleddate);\n\n    this.currmonth = this.activedate.getMonth() ;\n    console.log(this.currmonth);\n    this.curryear=this.activedate.getFullYear();\n\n    this._utils.completetask(this.taskdata._id.toString())\n    .subscribe(\n      res=>{\n        if(this.frequency ==\"Monthly\"){\n          if(this.currmonth ==11 ){\n            this.scheduledmonth=0;\n            this.scheduledyear=this.curryear+1;\n          }\n                \n          else{\n            this.scheduledmonth=this.currmonth +1;\n            this.scheduledyear=this.curryear;\n          }\n       }\n       if(this.frequency ==\"Bimonthly\"){\n          if(this.currmonth ==11|| this.currmonth ==10 ){\n            this.scheduledmonth=1;\n            this.scheduledyear=this.curryear+1;\n          }\n          else{\n            this.scheduledmonth=this.currmonth+2;\n            this.scheduledyear=this.curryear;\n          }\n       }\n     \n      this.scheduledday=this.nextdate;\n  console.log(this.nextdate+\"Scheduledday\");\n      this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday,0,0,0,0);\n  \n      console.log(\"Scheduled date is \"+ this.scheduleddate);\n      this.newtask= {userID:this.userID,email:this.userDetails.email,servicetype: this.task.servicetype,scheduleddate:this.scheduleddate,completed:false};\n      \n      this._utils.addTask(this.newtask)\n          .subscribe(\n          res=>{\n            console.log(res);\n            this._router.navigate(['/tasks']);\n          },\n          err=>{\n          console.log(err);\n          }\n        )\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n\n  }\n     \n    //  Mail confirmation code starts\n      this.mail.email=this.userDetails.email;\n      if(this.task.servicetype == 'eb'){\n        this.mail.subject=\"Electricity Bill Payment - CALMS - Confirmation\";\n        \n        this.mail.text=`Electricity Bill Payment scheduled for ${this.activedate} has been completed` ;\n      }\n      else if(this.task.servicetype=='lab')\n      {\n        this.mail.subject=\"Lab@home Service - CALMS - Call confirmation\";\n        \n        this.mail.text=`Lab visit has been scheduled for ${this.activedate}` ;\n\n      }\n      \n      this._utils.sendmail(this.mail)\n        .subscribe(\n          res=>{\n            console.log(res);\n          },\n          err=>{\n            console.log(err);\n          }\n\n        )\n    }\n    //  Mail confirmation code ends\n\n    \n\n}\n"," <div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n\n        <div class=\"col-md-4\"></div>\n        <div class=\"col-md-5\">\n            \n\n                            <div class=\"card rounded-0\" id=\"main\">\n                                <div class=\"card-header\">\n                                    <h3 class=\"mb-0\">Task Details</h3>\n                                </div>\n                                \n                                <div class=\"card-body\">\n                                    <form >\n                                        <label for=\"\">User email:</label>\n                                        <label class=\"form-control\" for=\"\">{{task.email}}</label>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Service Type:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.servicetype}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <div *ngIf=\"isEBservice\">\n                                                    <label for=\"\">Electricity Consumer Number:</label>\n                                                    <label class=\"form-control\" for=\"\">{{task.consumernum}}</label>\n                                                </div>\n                                                <div *ngIf=\"isLabservice\">\n                                                    <label for=\"\">Lab Test Name:</label>\n                                                    <label class=\"form-control\" for=\"\">{{task.testname}}</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"isEBservice\" class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">EB Payment Frequency:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentfreq}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">EB Payment Date</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentdate}}</label>    \n                                            </div>\n                                        </div>\n                                        \n                                        <div *ngIf=\"isLabservice\" class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Visit Frequency:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentfreq}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Visit Date</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentdate}}</label>    \n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Task Scheduled Date:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.scheduleddate | date}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Task Completed?</label>\n                                                <label class=\"form-control\" for=\"\">{{task.completed? 'Yes':'No'}}</label>    \n                                            </div>\n                                        </div>\n                                        \n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Funds Available:</label>\n                                                <label class=\"form-control\" for=\"\">Rs 20,000</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Contact Number:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.contact}}</label>\n                                            </div>\n                                        </div>\n                                        \n                                        <div>\n                                            <button type=\"button\" class=\"btn btn-success float-right ml-2\" routerLink=\"/tasks\">Cancel</button>\n                                            <button type=\"submit\" [disabled]=\"task.completed\" class=\"btn btn-success float-right\"(click)=\"completeTask()\">Complete Task</button>\n                                        </div>\n                                    </form>\n                                </div>\n                </div>\n                \n\n            </div>\n            <div class=\"col-md-3\"></div>\n        </div>\n    </div>\n </div>\n\n \n\n","export class Task{\r\n        \r\n        constructor(\r\n            public userID:String,\r\n            public email:String,\r\n            public servicetype:String,\r\n            public scheduleddate:Date,\r\n            public completed:Boolean\r\n        ){}\r\n\r\n}","export class TaskDetail{\r\n\r\n    constructor(\r\n        public email:String,\r\n        public servicetype:String,\r\n        public consumernum:String,\r\n        public scheduleddate:Date,\r\n        public testname:String,\r\n        public completed:boolean,\r\n        public contact:Number,\r\n        public paymentfreq:String,\r\n        public paymentdate:Number\r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport {UtilsService} from '../utils.service';\nimport { Task } from './task.model';\n\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\n\nexport class TasksComponent implements OnInit {\n\n  constructor(private _utils:UtilsService) { }\n  searchAll:Boolean  = true;\n  \n  tasks:Task[];\n\n  ngOnInit(): void {\n      this.showalltasks();\n   \n  }\n\n  toggleSearch(){\n    this.searchAll=!this.searchAll;\n    if(!this.searchAll){\n        this.showincompletetasks();\n    }\n    else{\n      this.showalltasks();\n    }\n\n  }\n  showincompletetasks(){\n    this._utils.getincompletetasks()\n    .subscribe(\n\n      res=>{\n        console.log(res);\n        this.tasks=[];\n        this.tasks = JSON.parse(JSON.stringify(res));\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  showalltasks(){\n    this._utils.gettasks()\n    .subscribe(\n      res=>{\n        console.log(res);\n\n        this.tasks = JSON.parse(JSON.stringify(res));\n\n      },\n      err=>\n      {\n        console.log(err);\n\n      }\n\n    )\n\n  }\n}\n","<div class=\"card mx-auto\">\n    <div class=\"card-header\">\n        <h4> List of Scheduled Tasks</h4>\n     </div>\n     <div class=\"card-body\" id=\"main\">\n          <div class=\"table-responsive\">\n              <table class=\"table table-striped\">\n                 <thead>\n                     <tr>\n                         <th scope=\"col\">User Email</th>\n                         <th scope=\"col\">Task Type</th>\n                         <th scope=\"col\">Scheduled Date</th>\n                         <th scope=\"col\">Completed?  </th>\n                         <th> <button class=\"btn btn-primary\" (click)=\"toggleSearch()\">Show {{searchAll? 'Incomplete ': 'All ' }} Tasks </button></th>\n                          \n                     </tr>\n                 </thead>\n                 <tbody>\n                     <tr *ngFor=\"let task of tasks\">\n                         <td>{{task.email}}</td>\n                         <td>{{task.servicetype}}</td>\n                         <td>{{task.scheduleddate | date}}</td>\n                         <td >{{task.completed ? 'Yes':'No'}}</td>\n                         <td> <a class=\"btn btn-primary\" routerLink=\"/taskdetail/{{task._id}}\">Open Task</a></td>\n                     </tr>\n                 </tbody>\n                </table>\n          </div>\n     </div>\n\n</div>","import { Injectable, Injector } from '@angular/core';\nimport {HttpInterceptor} from '@angular/common/http';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService {\n\n  constructor(private injector:Injector) { }\n  \n intercept(req,nxt){\n  let authService = this.injector.get(AuthService);\n  let tokenizedReq=req.clone(\n    {\n     setHeaders:{\n       // Authorization:'Bearer ab.bb.cc'\n       Authorization: `Bearer ${authService.getToken()}`\n     }\n\n    }\n  )\n  return nxt.handle(tokenizedReq);\n\n}\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from  '../auth.service';\nimport {User} from '../profile/User.model';\nimport {UtilsService} from '../utils.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor(private _auth: AuthService,private _utils:UtilsService) { }\n\n  users:User[];\n  ngOnInit(): void {\n    \n    this._auth.getUsers()\n    .subscribe(\n      res=>{\n        console.log(res);\n        this.users = JSON.parse(JSON.stringify(res));\n\n      },\n      err=>\n      {\n        console.log(err);\n\n      }\n\n    )\n  }\n\n  deleteUser(id){\n\n    if(confirm(\"Are you sure you want to delete the User and related services and tasks?\")==true){\n      this._auth.deleteUser(id.toString())\n      .subscribe(\n        res=>\n        {\n           this.users = JSON.parse(JSON.stringify(res)); \n           //delete all Electricity bills for the user\n           this._utils.deleteEBService(id.toString())\n           .subscribe(\n             res=>{\n              console.log(\"All eb services for user deleted\");\n              this._utils.deleteLabService(id.toString())\n              .subscribe(\n\n                res=>\n                {\n                  this._utils.deletetasksforUser(id.toString())\n                  .subscribe(\n                    res=>{\n                      \n                        console.log(\"All tasks for user deleted\");\n                    },\n                    err=>\n                    {\n                      console.log(err);\n                    }\n                  )\n                },\n                err=>{\n                  console.log(err);\n                }\n              )\n              \n             },\n             err=>{\n               console.log(err);\n             }\n           )\n        },\n        \n          err=>{\n            console.log(err);\n        }\n      )\n    }\n\n  }\n}\n","<div class=\"card mx-auto\">\n    <div class=\"card-header\">\n        <h4> List of Users</h4>\n     </div>\n     <div class=\"card-body\" id=\"main\">\n          <div class=\"table-responsive\">\n              <table class=\"table table-striped\">\n                 <thead>\n                     <tr>\n                         <th scope=\"col\">Email</th>\n                         <th scope=\"col\">Name</th>\n                         <th scope=\"col\">Address</th>\n                         <th scope=\"col\">Contact Number </th>\n                         <th></th>\n                          \n                     </tr>\n                 </thead>\n                 <tbody>\n                     <tr *ngFor=\"let user of users\">\n                         <td>{{user.email}}</td>\n                         <td>{{user.name}}</td>\n                         <td>{{user.address}}</td>\n                         <td>{{user.contact}}</td>\n                         <td> <a class=\"btn btn-primary\" (click)=\"deleteUser(user._id)\">Delete User</a></td>\n                     </tr>\n                 </tbody>\n                </table>\n          </div>\n     </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { templateJitUrl } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  // private _addebillUrl = \"http://localhost:3000/addebill\";\n  // private _getEBServiceUrl = \"http://localhost:3000/getEBService\";\n  // private _updateEBServiceUrl=\"http://localhost:3000/updateEbill\";\n  // private _deleteEBServiceUrl=\"http://localhost:3000/deleteEBill\";\n  // private _addTaskUrl=\"http://localhost:3000/addtask\";\n  // private _updatetaskUrl=\"http://localhost:3000/updatetask\";\n  // private _gettasksUrl=\"http://localhost:3000/gettasks\";\n  // private _getincompletetasksUrl=\"http://localhost:3000/getincompletetasks\";\n  // private _getsingletaskUrl =\"http://localhost:3000/getsingletask\";\n  // private _completetaskUrl=\"http://localhost:3000/completetask\";\n  // private _sendmailUrl=\"http://localhost:3000/sendmail\";\n  // private _deletetasksforUserUrl = \"http://localhost:3000/deletetasksforUser\";\n  // private _deletetasksforUserandservicetypeUrl = \"http://localhost:3000/deletetasksforUserandservicetype\";\n  // private _addlabserviceUrl = \"http://localhost:3000/addlabservice\";\n  // private _getlabServiceUrl = \"http://localhost:3000/getlabService\";\n  // private _updateLabserviceUrl = \"http://localhost:3000/updateLabservice\";\n  // private _deleteLabserviceUrl= \"http://localhost:3000/deleteLabservice\";\n  private _addebillUrl = \"addebill\";\n  private _getEBServiceUrl = \"getEBService\";\n  private _updateEBServiceUrl=\"updateEbill\";\n  private _deleteEBServiceUrl=\"deleteEBill\";\n  private _addTaskUrl=\"addtask\";\n  private _updatetaskUrl=\"updatetask\";\n  private _gettasksUrl=\"gettasks\";\n  private _getincompletetasksUrl=\"getincompletetasks\";\n  private _getsingletaskUrl =\"getsingletask\";\n  private _completetaskUrl=\"completetask\";\n  private _sendmailUrl=\"sendmail\";\n  private _deletetasksforUserUrl = \"deletetasksforUser\";\n  private _deletetasksforUserandservicetypeUrl = \"deletetasksforUserandservicetype\";\n  private _addlabserviceUrl = \"addlabservice\";\n  private _getlabServiceUrl = \"getlabService\";\n  private _updateLabserviceUrl = \"updateLabservice\";\n  private _deleteLabserviceUrl= \"deleteLabservice\";\n\n  constructor(private http: HttpClient) { }\n\n  addEbill(billdata){\n    console.log(billdata);\n    return this.http.post(this._addebillUrl,billdata);\n  }\n\n  getEBService(userID){\n    return this.http.post(this._getEBServiceUrl,{userID:userID});\n  }\n\n  updateEBService(ebill){\n    return this.http.post(this._updateEBServiceUrl,ebill);\n\n  }\n\n  deleteEBService(userID){\n    return this.http.post(this._deleteEBServiceUrl,{userID:userID});\n  }\n\n  addTask(task){\n    return this.http.post(this._addTaskUrl,task);\n  }\n\n  updatetask(task){\n    return this.http.post(this._updatetaskUrl,task);\n\n  }\n\n  deletetasksforUser(id){\n    return this.http.post(this._deletetasksforUserUrl,{\"userID\":id});\n  }\n  \n  deletetasksforuserandservicetype(id,type){\n    return this.http.post(this._deletetasksforUserandservicetypeUrl,{\"userID\":id,\"servicetype\":type});\n\n  }\n  gettasks(){\n    return this.http.get(this._gettasksUrl);\n  }\n\n  getincompletetasks(){\n    return this.http.get(this._getincompletetasksUrl);\n  }\n\n  getsingletask(_id){\n    return this.http.post(this._getsingletaskUrl,{_id:_id});\n  }\n\n  completetask(_id){\n  return this.http.post(this._completetaskUrl,{_id:_id});\n  }\n  \n  sendmail(mail){\n    return this.http.post(this._sendmailUrl,mail);\n  }\n\n  addlabservice(labdata){\n    console.log(labdata);\n    return this.http.post(this._addlabserviceUrl,labdata);\n  }\n\n  getLabService(userID){\n    return this.http.post(this._getlabServiceUrl,{userID:userID});\n  }\n\n  updateLabservice(labdata){\n    return this.http.post(this._updateLabserviceUrl,labdata)\n  }\n\n  deleteLabService(userID){\n    return this.http.post(this._deleteLabserviceUrl,{userID:userID});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}