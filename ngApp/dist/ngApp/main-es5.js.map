{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/ebill-edit/ebill-edit.component.ts","webpack:///src/app/ebill-edit/ebill-edit.component.html","webpack:///src/app/ebillsubscribe/ebillsubscribe.component.ts","webpack:///src/app/ebillsubscribe/ebillsubscribe.component.html","webpack:///src/app/edit-profile/edit-profile.component.ts","webpack:///src/app/edit-profile/edit-profile.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/lab-edit/lab-edit.component.ts","webpack:///src/app/lab-edit/lab-edit.component.html","webpack:///src/app/lab-home/lab-home.component.ts","webpack:///src/app/lab-home/lab-home.component.html","webpack:///src/app/lab-home/labdetail.model.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/payment/payment.component.ts","webpack:///src/app/payment/payment.component.html","webpack:///src/app/profile/User.model.ts","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/service.model.ts","webpack:///src/app/register/confirmedvalidator.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services-home/services-home.component.ts","webpack:///src/app/services-home/services-home.component.html","webpack:///src/app/services/services.component.ts","webpack:///src/app/services/services.component.html","webpack:///src/app/task-detail/task-detail.component.ts","webpack:///src/app/task-detail/task-detail.component.html","webpack:///src/app/tasks/task.model.ts","webpack:///src/app/tasks/taskdetail.model.ts","webpack:///src/app/tasks/tasks.component.ts","webpack:///src/app/tasks/tasks.component.html","webpack:///src/app/token-interceptor.service.ts","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/app/utils.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","_auth","_router","next","state","loggedIn","navigate","providedIn","AuthService","http","_registerUrl","_loginUrl","_getUserUrl","_updateUserUrl","_getUsersUrl","_deleteUserUrl","user","post","localStorage","getItem","get","EbillEditComponent","_utils","fb","numbers","task","ebdata","userID","consumernum","paymentfreq","dateofpayment","undefined","ebillForm","group","consumer","required","Array","fill","map","x","i","freqoptions","getLoggedInUserID","getEBService","toString","subscribe","res","console","log","JSON","parse","stringify","err","nowDate","Date","currmonth","getMonth","currDate","getDate","curryear","getFullYear","updateEBService","touched","value","scheduledmonth","scheduledyear","scheduledday","scheduleddate","email","useremail","servicetype","completed","updatetask","update","EbillsubscribeComponent","paymentdate","pay","getLoggedInUseremail","ebillData","registeredDate","addEbill","addTask","validationError","error","status","setErrors","serverError","EditProfileComponent","router","profile","editProfileForm","name","address","contact","minLength","maxLength","pattern","loggedinuserID","getUserDetails","saveUser","data","FooterComponent","HeaderComponent","isAdmin","removeItem","HomeComponent","LabEditComponent","labdetail","testname","visitfreq","visitdate","labForm","getLabService","updateLabservice","LabHomeComponent","addlabservice","Labdetail","LoginComponent","loginForm","password","loginUserDetails","loginUser","setItem","PaymentComponent","User","ProfileComponent","_route","services","service","loadServices","push","labdata","type","serviceType","confirm","deleteEBService","deletetasksforuserandservicetype","deleteLabService","Service","registereddate","isEB","isLab","ConfirmedValidator","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","confirmedValidator","RegisterComponent","registeredUser","confpassword","passwordpattern","registerForm","validator","registerUser","ServicesHomeComponent","ServicesComponent","TaskDetailComponent","route","isEBservice","isLabservice","newtask","mail","subject","text","params","taskid","getsingletask","taskdata","userDetails","frequency","nextdate","activedate","completetask","_id","sendmail","completeTask","Task","TaskDetail","TasksComponent","searchAll","showalltasks","showincompletetasks","getincompletetasks","tasks","gettasks","toggleSearch","TokenInterceptorService","injector","nxt","authService","tokenizedReq","clone","setHeaders","Authorization","getToken","handle","UsersComponent","getUsers","users","deleteUser","deletetasksforUser","UtilsService","_addebillUrl","_getEBServiceUrl","_updateEBServiceUrl","_deleteEBServiceUrl","_addTaskUrl","_updatetaskUrl","_gettasksUrl","_getincompletetasksUrl","_getsingletaskUrl","_completetaskUrl","_sendmailUrl","_deletetasksforUserUrl","_deletetasksforUserandservicetypeUrl","_addlabserviceUrl","_getlabServiceUrl","_updateLabserviceUrl","_deleteLabserviceUrl","billdata","ebill","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport {ServicesComponent} from './services/services.component';\nimport { EbillsubscribeComponent } from './ebillsubscribe/ebillsubscribe.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ServicesHomeComponent } from './services-home/services-home.component';\nimport { EbillEditComponent } from './ebill-edit/ebill-edit.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport {TaskDetailComponent} from './task-detail/task-detail.component';\nimport {AuthGuard} from './auth.guard';\nimport { UsersComponent } from './users/users.component';\nimport { LabHomeComponent } from './lab-home/lab-home.component';\nimport { LabEditComponent } from './lab-edit/lab-edit.component';\nimport { PaymentComponent } from './payment/payment.component';\n\n\nconst routes: Routes = [ \n    {path:\"\",component:HomeComponent},\n    {path:\"register\",component:RegisterComponent},\n    {path:\"login\",component:LoginComponent},\n    {path:\"serviceshome/ebillsubscribe\",component:EbillsubscribeComponent,canActivate:[AuthGuard]},\n    {path:\"profile\",component:ProfileComponent,canActivate:[AuthGuard]},\n    {path:'editprofile',component:EditProfileComponent,canActivate:[AuthGuard]},\n    {path:'serviceshome',component:ServicesHomeComponent,canActivate:[AuthGuard]},\n    {path:'ebilledit',component:EbillEditComponent,canActivate:[AuthGuard]},\n    {path:'tasks',component:TasksComponent,canActivate:[AuthGuard]},\n    {path:'taskdetail/:id',component:TaskDetailComponent,canActivate:[AuthGuard]},\n    {path:'users',component:UsersComponent,canActivate:[AuthGuard]},\n    {path:'serviceshome/labsubscribe',component:LabHomeComponent,canActivate:[AuthGuard]},\n    {path:'labedit',component:LabEditComponent,canActivate:[AuthGuard]},\n    {path:'payment',component:PaymentComponent,canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngApp';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthService } from './auth.service';\nimport { HomeComponent } from './home/home.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {UtilsService} from './utils.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { ServicesComponent } from './services/services.component';\nimport { EbillsubscribeComponent } from './ebillsubscribe/ebillsubscribe.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ServicesHomeComponent } from './services-home/services-home.component';\nimport { YouTubePlayerModule } from \"@angular/youtube-player\";\nimport { EbillEditComponent } from './ebill-edit/ebill-edit.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport {TokenInterceptorService} from './token-interceptor.service';\nimport {AuthGuard} from './auth.guard';\nimport { UsersComponent } from './users/users.component';\nimport { LabHomeComponent } from './lab-home/lab-home.component';\nimport { LabEditComponent } from './lab-edit/lab-edit.component';\nimport { PaymentComponent } from './payment/payment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    HeaderComponent,\n    HomeComponent,\n    FooterComponent,\n    ServicesComponent,\n    EbillsubscribeComponent,\n    LoginComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    ServicesHomeComponent,\n    EbillEditComponent,\n    TasksComponent,\n    TaskDetailComponent,\n    UsersComponent,\n    LabHomeComponent,\n    LabEditComponent,\n    PaymentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    YouTubePlayerModule\n  ],\n  providers: [AuthService,UtilsService,AuthGuard,\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:TokenInterceptorService,\n      multi:true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree ,Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  \n  constructor(private _auth:AuthService,private _router:Router){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this._auth.loggedIn()){\n        \n        return true;\n    } \n    else{\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // private _registerUrl = \"http://localhost:3000/register\";\n  // private _loginUrl = \"http://localhost:3000/login\";\n  // private _getUserUrl =\"http://localhost:3000/getUserDetails\";\n  // private _updateUserUrl = \"http://localhost:3000/updateUser\";\n  // private _getUsersUrl=\"http://localhost:3000/getUsers\";\n  // private _deleteUserUrl=\"http://localhost:3000/deleteUser\";\n\n  private _registerUrl = \"register\";\n  private _loginUrl = \"login\";\n  private _getUserUrl =\"getUserDetails\";\n  private _updateUserUrl = \"updateUser\";\n  private _getUsersUrl=\"getUsers\";\n  private _deleteUserUrl=\"deleteUser\";\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user){\n    // console.log(user);\n    return this.http.post(this._registerUrl,user);\n  }\n\n  loginUser(user){\n    return this.http.post(this._loginUrl,user);\n  }\n\n  getLoggedInUseremail(){\n    return localStorage.getItem('CALMSemail');\n  }\n  \n  getLoggedInUserID(){\n    return localStorage.getItem('CALMSuserID')\n  }\n  getUserDetails(id){\n    return this.http.post(this._getUserUrl,{\"_id\":id});\n  }\n\n  getUsers(){\n    return this.http.get(this._getUsersUrl);\n  }\n\n  saveUser(user){\n    return this.http.post(this._updateUserUrl,user);\n  }\n\n  deleteUser(id){\n    return this.http.post(this._deleteUserUrl,{\"userID\":id});\n  }\n\n  loggedIn(){\n    return !!localStorage.getItem('token');\n\n  }\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n  isAdmin(){\n    return !!localStorage.getItem('isAdmin');\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\n\n@Component({\n  selector: 'app-ebill-edit',\n  templateUrl: './ebill-edit.component.html',\n  styleUrls: ['./ebill-edit.component.css']\n})\nexport class EbillEditComponent implements OnInit {\n\n  \n  \n  numbers:Number[]=[];\n  useremail ;\n  freqoptions;\n  selectedFreq;\n  userID;\n  today:Date;\n  nowDate:Date;\n  task=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  //to calculate scheduled date of task\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\nscheduledday;\n\n\n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n    \n    this.userID=this._auth.getLoggedInUserID();\n    this._utils.getEBService(this.userID.toString())\n    .subscribe(\n      res=>{\n        console.log(res);\n          this.ebdata= JSON.parse(JSON.stringify(res));\n          this.ebdata.userID=this.userID.toString();\n          \n      },\n      err=>{\n        console.log(err);\n      }\n\n    )\n   }\n  \n   ebdata={userID:\"\",consumernum:\"\",paymentfreq:\"\",dateofpayment:undefined};\n   \n   ebillForm= this.fb.group(\n    {\n      consumer:['',[Validators.required]],\n      paymentfreq:['',[Validators.required]],\n      dateofpayment:['',[Validators.required]]\n  }\n\n   )\n\n  ngOnInit(): void {\n\n    \n  }\n\n  update(){\n    \n\n    this.nowDate= new Date();\n    \n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n\n     this._utils.updateEBService(this.ebdata)\n      .subscribe(res=>{\n              \n//update task on;y if there is change in payment date or paymentfrequency\n      if(this.ebillForm.get('paymentfreq').touched || this.ebillForm.get('paymentdate').touched) {\n        \n            if(this.ebillForm.get('paymentfreq').value ==\"Monthly\"){\n              //for dec month and monthly freq and payment date is past current date,schedule for next month\n              //and next year\n              if(this.currmonth ==11 && this.ebillForm.get('dateofpayment').value< this.currDate ){\n                this.scheduledmonth=0;\n                this.scheduledyear=this.curryear+1;\n              }\n              //if payment date is not over for current month, schedule for current month\n              else if(this.ebillForm.get('dateofpayment').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                //Not Dec, other cases, schedule for next month, current year\n                this.scheduledmonth=this.currmonth +1;\n                this.scheduledyear=this.curryear;\n              }\n          }\n          //repeat above cases for Bi monthly..only increment by 2 months\n          if(this.ebillForm.get('paymentfreq').value ==\"Bimonthly\"){\n              if(this.currmonth ==11|| this.currmonth ==10 && this.ebillForm.get('dateofpayment').value< this.currDate ){\n                this.scheduledmonth=1;\n                this.scheduledyear=this.curryear+1;\n              }\n              else if(this.ebillForm.get('dateofpayment').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                this.scheduledmonth=this.currmonth+2;\n                this.scheduledyear=this.curryear;\n              }\n          }\n        \n          this.scheduledday=this.ebillForm.get('dateofpayment').value;\n          console.log(\"New day\" + this.scheduledday);\n          console.log(\"New month\"+ this.scheduledmonth);\n          console.log(\"New year\"+ this.scheduledyear);\n\n          this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday);\n      \n          console.log(\"Scheduled date is \"+ this.scheduleddate);\n          this.task= {userID:this.userID,email:this.useremail,servicetype:'eb',scheduleddate:this.scheduleddate,completed:false};\n          \n          this._utils.updatetask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              \n            },\n          err=>{\n            console.log(err);\n          }\n             )\n\n      }\n       \n      \n      \n      })\n      this._router.navigate(['/profile']);\n      }\n\n}\n","\n<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n    \n<div class=\"row\" >\n    <div class=\"col-md-4\">\n\n    </div>\n    <div class=\"col-md-4\">\n        <div class=\"card rounded-0\" id=\"main\">\n            <div class=\"card-header\">\n                <h3 class=\"mb-0\">Electricity bill payment service</h3>\n            </div>\n            \n            <div class=\"card-body\">\n                <form  class=\"form\"  [formGroup]=\"ebillForm\"  >\n                    <div class=\"form-group\">\n                        <label for=\"consumer\">Consumer Number: </label>\n                        <input type=\"text\"  formControlName= \"consumer\" name=\"consumer\" id=\"consumer\" class=\"form-control rounded-0\" [(ngModel)]='ebdata.consumernum' >\n                        <div *ngIf= \"ebillForm.get('consumer').invalid && ebillForm.get('consumer').touched\">\n                            <small *ngIf = \"ebillForm.get('consumer').errors?.required\" class=\"text-white\" >Consumer Number is required</small>\n                           \n                        </div>\n                    </div>\n                    <div class=\"form-group\" >\n                        <label for=\"frequency\">Payment Frequency: </label>\n                           <select  name=\"paymentfreq\" id=\"paymentfreq\" class=\"form-control rounded-0\" formControlName=\"paymentfreq\" [(ngModel)]='ebdata.paymentfreq'> \n                           <option *ngFor=\"let paymentfreq of freqoptions\" [ngValue]=\"paymentfreq\">{{paymentfreq}}</option> \n                    \n                        </select>\n          \n                        <div *ngIf= \"ebillForm.get('paymentfreq').invalid && ebillForm.get('paymentfreq').touched\">\n                            <small *ngIf = \"ebillForm.get('paymentfreq').errors?.required\" class=\"text-white\" >Payment Frequency is required</small>\n                            \n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"dateofpayment\">Payment Date: </label>\n                        \n                     \n                        <select  name=\"dateofpayment\" id=\"dateofpayment\" class=\"form-control rounded-0\" formControlName=\"dateofpayment\" [(ngModel)]='ebdata.dateofpayment' > \n                            <option *ngFor=\"let dateofpayment of numbers\" [ngValue]=\"dateofpayment\">{{dateofpayment}}</option> \n                     \n                         </select>\n                        <div *ngIf= \"ebillForm.get('dateofpayment').invalid && ebillForm.get('dateofpayment').touched\">\n                            <small *ngIf = \"ebillForm.get('dateofpayment').errors?.required\" class=\"text-white\" >Payment Date is required</small>\n                            <small *ngIf = \"ebillForm.get('dateofpayment').errors?.serverError\" class=\"text-white\" >{{ebillForm.get('dateofpayment').errors?.serverError}}</small>\n                        </div>\n                       \n                    </div>\n                    <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                    <button type=\"submit\" (click)=\"update()\" [disabled]=\"ebillForm.invalid\"  class=\"btn btn-success float-right\">Submit</button>\n                    \n        \n                </form>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"col-md-4\">\n\n    </div>\n\n</div>\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\n\n@Component({\n  selector: 'app-ebillsubscribe',\n  templateUrl: './ebillsubscribe.component.html',\n  styleUrls: ['./ebillsubscribe.component.css']\n})\nexport class EbillsubscribeComponent implements OnInit {\n\n  \n  numbers:Number[]=[];\n  useremail ;\n  freqoptions;\n  selectedFreq;\n  ebillData;\n  userID;\n  // today:String;\n  nowDate:Date;\n  task=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  //to calculate scheduled date of task\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\nscheduledday;\n\n\n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n   }\n  \n  \n\n   ebillForm= this.fb.group(\n    {\n      consumer:['',[Validators.required]],\n      paymentfreq:['',[Validators.required]],\n      paymentdate:['',[Validators.required]]\n  }\n\n   )\n  ngOnInit(): void {\n  \n  }\n  \n  subscribe(pay){\n    \n    \n    this.useremail  = this._auth.getLoggedInUseremail();\n  \n    this.userID  = this._auth.getLoggedInUserID();\n    this.nowDate= new Date();  \n\n     this.ebillData={userID:this.userID, email:this.useremail,registeredDate:this.nowDate, consumernum:this.ebillForm.get('consumer').value,\n        paymentfreq:this.ebillForm.get('paymentfreq').value,dateofpayment:this.ebillForm.get('paymentdate').value};\n\n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n    console.log(this.currmonth);\n    \n        // console.log(this.ebillData);\n    this._utils.addEbill(this.ebillData)\n    .subscribe(\n      res=>{\n        console.log(res);\n       \n        if(this.ebillForm.get('paymentfreq').value ==\"Monthly\"){\n            if(this.currmonth ==11 && this.ebillForm.get('paymentdate').value< this.currDate ){\n              this.scheduledmonth=0;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.ebillForm.get('paymentdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth +1;\n              this.scheduledyear=this.curryear;\n            }\n         }\n         if(this.ebillForm.get('paymentfreq').value ==\"Bimonthly\"){\n            if(this.currmonth ==11|| this.currmonth ==10 && this.ebillForm.get('paymentdate').value< this.currDate ){\n              this.scheduledmonth=1;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.ebillForm.get('paymentdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth+2;\n              this.scheduledyear=this.curryear;\n            }\n         }\n       \n        this.scheduledday=this.ebillForm.get('paymentdate').value;\n    \n        this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday);\n    \n        console.log(\"Scheduled date is \"+ this.scheduleddate);\n        this.task= {userID:this.userID,email:this.useremail,servicetype:'eb',scheduleddate:this.scheduleddate,completed:false};\n        console.log(this.task);\n        this._utils.addTask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              if(pay){\n                this._router.navigate(['/payment']);\n              }\n              else\n              {\n                this._router.navigate(['/profile']);\n              }\n              \n            },\n            err=>{\n            console.log(err);\n            }\n          )\n       \n      },\n      err=>{\n        console.log(err);\n        //handle server side errors\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n           if(err.status === 422){\n            this.ebillForm.get('paymentdate').setErrors({ serverError: validationError}); \n          }\n        }\n\n\n      }\n    )\n\n\n  }\n\n  \n}\n","<div class=\"table\" id=\"maintable\">\n<div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n<div class=\"row\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card rounded-0\" id=\"main\">\n            <div class=\"card-header\">\n                <h3 class=\"mb-0\">Electricity bill payment service</h3>\n            </div>\n            \n            <div class=\"card-body\">\n                <form  class=\"form\"  [formGroup]=\"ebillForm\"  >\n                    <div class=\"form-group\">\n                        <label for=\"consumer\">Consumer Number: </label>\n                        <input type=\"text\"  formControlName= \"consumer\" name=\"consumer\" id=\"consumer\" class=\"form-control rounded-0\" >\n                        <div *ngIf= \"ebillForm.get('consumer').invalid && ebillForm.get('consumer').touched\">\n                            <small *ngIf = \"ebillForm.get('consumer').errors?.required\" class=\"text-white\" >Consumer Number is required</small>\n                           \n                        </div>\n                    </div>\n                    <div class=\"form-group\" >\n                        <label for=\"frequency\">Payment Frequency: </label>\n                        <select  name=\"paymentfreq\" id=\"paymentfreq\" class=\"form-control rounded-0\" formControlName=\"paymentfreq\" > \n                           <option *ngFor=\"let paymentfreq of freqoptions\" [ngValue]=\"paymentfreq\">{{paymentfreq}}</option> \n                    \n                        </select>\n          \n                        <div *ngIf= \"ebillForm.get('paymentfreq').invalid && ebillForm.get('paymentfreq').touched\">\n                            <small *ngIf = \"ebillForm.get('paymentfreq').errors?.required\" class=\"text-white\" >Payment Frequency is required</small>\n                            \n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"paymentdate\">Payment Date: </label>\n                        \n                     \n                        <select  name=\"paymentdate\" id=\"paymentdate\" class=\"form-control rounded-0\" formControlName=\"paymentdate\" > \n                            <option *ngFor=\"let paymentdate of numbers\" [ngValue]=\"paymentdate\">{{paymentdate}}</option> \n                     \n                         </select>\n                        <div *ngIf= \"ebillForm.get('paymentdate').invalid && ebillForm.get('paymentdate').touched\">\n                            <small *ngIf = \"ebillForm.get('paymentdate').errors?.required\" class=\"text-white\" >Payment Date is required</small>\n                            <small *ngIf = \"ebillForm.get('paymentdate').errors?.serverError\" class=\"text-white\" >{{ebillForm.get('paymentdate').errors?.serverError}}</small>\n                        </div>\n                       \n                    </div>\n                    <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                    <button type=\"button\"  [disabled]=\"ebillForm.invalid\" (click)=\"subscribe(false)\" class=\"btn btn-success float-right\">Submit</button>\n                    <!-- <button type=\"button\"  [disabled]=\"ebillForm.invalid\" (click)=\"subscribe(true)\" class=\"btn btn-success float-right\">Submit and Pay</button> -->\n        \n        \n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport {User} from '../profile/User.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  loggedinuserID;\n\n  constructor(private fb:FormBuilder,private _auth: AuthService,private router:Router) { }\n\n  profile=new User(null,null,null,null);\n\n  editProfileForm=this.fb.group(\n    {\n      name:['',Validators.required],\n      address:['',Validators.required],\n     \n    contact:['',[ Validators.required,Validators.minLength(10),  \n      Validators.maxLength(12),  \n      Validators.pattern('^[0-9]*$')]]\n    \n    }\n    )\n\n  ngOnInit(): void {\n\n    this.loggedinuserID=this._auth.getLoggedInUserID();\n    this._auth.getUserDetails(this.loggedinuserID)\n    .subscribe(\n      res=>{\n        this.profile=JSON.parse(JSON.stringify(res));\n        \n      },\n      err=>{\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n     \n          console.log(validationError);\n        }\n      }\n\n    )\n    \n  }\n\n  saveUser(){\n    this._auth.saveUser(this.profile)\n    .subscribe(data=>console.log(data))\n    this.router.navigate(['/profile']);\n  }\n}\n","\n <div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n<div class=\"row\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-5\">\n\n                <div class=\"card rounded-0\" id=\"main\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Edit User Details</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\" [formGroup]=\"editProfileForm\" (ngSubmit)=\"saveUser()\">\n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Name: </label>\n                                <input type=\"text\" formControlName=\"name\" [class.is-invalid] = \"editProfileForm.get('name').invalid && editProfileForm.get('name').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"profile.name\"  name=\"name\" id=\"name\">\n                                <div *ngIf= \"editProfileForm.get('name').invalid && editProfileForm.get('name').touched\">\n                                    <small *ngIf = \"editProfileForm.get('name').errors?.required\" class=\"text-white\" >Name is required</small>\n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Address: </label>\n                                <input type=\"text\" formControlName=\"address\" [class.is-invalid] = \"editProfileForm.get('address').invalid && editProfileForm.get('address').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"profile.address\"  name=\"address\" id=\"address\">\n                                <div *ngIf= \"editProfileForm.get('address').invalid && editProfileForm.get('address').touched\">\n                                    <small *ngIf = \"editProfileForm.get('address').errors?.required\" class=\"text-white\" >Address is required</small>\n                                    <small *ngIf = \"editProfileForm.get('address').errors?.pattern\" class=\"text-white\" >Enter a valid address</small>\n                                    <small *ngIf = \"editProfileForm.get('address').errors?.serverError\" class=\"text-white\" >{{editProfileForm.get('address').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Contact Number: </label>\n                                <input type=\"text\" formControlName=\"contact\" [class.is-invalid] = \"editProfileForm.get('contact').invalid && editProfileForm.get('contact').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"profile.contact\"  name=\"contact\" id=\"contact\">\n                                <div *ngIf= \"editProfileForm.get('contact').invalid && editProfileForm.get('contact').touched\">\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.required\" class=\"text-white\" >Contact is required</small>\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.pattern\" class=\"text-white\" >Only numbers are allowed. </small>\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.minlength\" class=\"text-white\" >Contact number should have atleast 10 numbers. </small>\n                                    <small *ngIf = \"editProfileForm.get('contact').errors?.maxlength\" class=\"text-white\" >Contact number can have max 12 numbers. </small>\n                                </div>\n                            </div>\n                            <br>\n                            <br>\n                            <div>\n                                <button type=\"submit\" [disabled]='editProfileForm.invalid' class=\"btn btn-success float-right\"(click)=\"saveUser()\">Update</button>\n                                <button type=\"button\" class=\"btn btn-success float-right mr-2\" routerLink=\"/profile\">Cancel</button>\n                            </div>\n                            <br>\n                            <br>\n                            <br>\n\n                        </form> \n                    </div>\n                </div>\n                   \n        \n    </div>\n    <div class=\"col-md-4\"></div>\n</div>\n    </div>\n </div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<footer class=\"footer fixed-bottom footer-big footer-color-black \" data-color=\"black\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-2 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\">Company</h5>\n                    <nav>\n                        <ul>\n                            <li>\n                                <a href=\"#\">Home</a></li>\n                        \n                            <li>\n                                <a href=\"#\">About Us</a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <div class=\"col-md-3 col-md-offset-1 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\"> Help and Support</h5>\n                     <nav>\n                        <ul>\n                            <li>\n                                <a href=\"#\">Contact Us</a>\n                            </li>\n                  \n                            <li>\n                                <a href=\"#\">Money Back</a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <div class=\"col-md-3 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\">Latest News</h5>\n                    <nav>\n                        <ul>\n                           \n                            <li>\n                                <a href=\"#\">\n                                    <i class=\"fa fa-twitter\"></i> We've just been featured on <b> Awwwards Website</b>! Thank you everybody for...\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <div class=\"col-md-2 col-md-offset-1 col-sm-3\">\n                <div class=\"info\">\n                    <h5 class=\"title\">Follow us on</h5>\n                    <nav>\n                        <ul>\n                            <li>\n                                <a href=\"#\" class=\"btn btn-social btn-facebook btn-simple\">\n                                    <i class=\"fa fa-facebook-square\"></i> Facebook\n                                </a>\n                            </li>\n                          \n                            <li>\n                                <a href=\"#\" class=\"btn btn-social btn-twitter btn-simple\">\n                                    <i class=\"fa fa-twitter\"></i> Twitter\n                                </a>\n                            </li>\n                            \n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"copyright\">\n             © <script> document.write(new Date().getFullYear()) </script>CALMS\n        </div>\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private _router:Router,public _auth:AuthService) { }\n\n  ngOnInit(): void {\n\n    console.log(this._auth.isAdmin());\n  }\n\n  logoutUser(){\n      localStorage.removeItem('CALMSuserID');\n      localStorage.removeItem('CALMSemail');\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAdmin');\n    this._router.navigate(['/login']);\n  }\n\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\n    <a class=\"navbar-brand\" href=\"\">\n    <img src=\"../../assets/logo.png\" width=\"100\" height=\"\" alt=\"Logo\" loading=\"lazy\">\n    </a>\n    <ul class=\"navbar-nav ml-auto\">\n        <a class=\"nav-link\" routerLink=\"\"  >Home</a>\n        <a class=\"nav-link\" routerLink=\"/register\" *ngIf= \"!_auth.loggedIn()\"> Register</a>\n        <a class=\"nav-link\" routerLink=\"/profile\" *ngIf= \"_auth.loggedIn() && !_auth.isAdmin()\">Profile</a>\n        <a class=\"nav-link\" routerLink=\"/serviceshome\" *ngIf= \"_auth.loggedIn() && !_auth.isAdmin()\">Services</a>\n        <a class=\"nav-link\" routerLink=\"/tasks\" *ngIf= \"_auth.isAdmin() && _auth.loggedIn()\">Tasks</a>\n        <a class=\"nav-link\" routerLink=\"/users\" *ngIf= \"_auth.isAdmin() && _auth.loggedIn()\">Users</a>\n        <a class=\"nav-link\" routerLink=\"/login\" *ngIf= \"!_auth.loggedIn()\" >Login</a>\n        <a class=\"nav-link\"  style=\"cursor:pointer\" *ngIf= \"_auth.loggedIn()\" (click)=\"logoutUser()\">Logout</a>\n        \n    </ul>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section section-header\" >\n    <div class=\"parallax filter filter-color-red\" >\n        <div class=\"image\" style=\"background-image: url('../../assets/images/header.jpg')\"></div>\n        <div class=\"container\" >\n\n        \n            <div class=\"content\">\n                        \n                <div class=\"title-area\" >\n                    <p>A One Stop Solution for Utility Payments and Medical assistance for the Elderly  </p>\n                    <h1 class=\"title-modern\">CALMS</h1>\n                    <h3>Citizen Assisted Living Management System</h3>\n                    <div class=\"separator line-separator\">♦</div>\n                \n                </div>   \n            </div>\n        </div>\n     \n        \n    </div>\n    \n</div>\n\n\n<div class=\"section\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"title-area\">\n                <h2>Our Services</h2>\n                <div class=\"separator separator-danger\">✻</div>\n                <p class=\"description\">We promise you the best services, a kind and friendly attitude. We build that by getting to know you, your needs and creating the most ideal platform for you to easily manage your home needs and personal needs.</p>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                  \n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/electric.png\" alt=\"\">\n                    </div>\n                    <h3>Electricity Bill payments</h3>\n                    <p class=\"description\">Paying electricity bill online is the most helpful option, you can pay anywhere & anytime without jumping the deadline. We can pay your EB bill without missing out the last date of electricity bill payment that leads to extra payment of late charges. We offer a convenient platform for hassle-free bill payment.</p>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/medical-1.png\" alt=\"\">\n                    </div>\n                    <h3>Medical Services</h3>\n                    <p class=\"description\">We have tied with up Apollo Diagnostics who offer the sheer convenience of Home Sample Collection.\n                        On receiving a call, Apollo’s trained technicians arrive at the doorstep of the patient to collect samples. Home collection is completely free of cost and reports can be mailed to you or can be delivered at home (On Chargeable Basis) the very next day.</p>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/quality.png\" alt=\"\">\n                    </div>\n                    <h3>Adherence to Standards</h3>\n                    <p class=\"description\">We observe standardized processes and security guidelines for on-us and off-us bill collections.\n                        Customer satisfaction is our key priority, and so all our process are audited on an annual basis. We ensure the top standards in customer interaction,\n                        timely payment and communicating with you in case of any issues\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n               \n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"info-icon\">\n                    <div class=\"icondisplay\">\n                        <img src=\"../../assets/images/receipt.png\" alt=\"\">\n                    </div>\n                    <h3>Instant Confirmation</h3>\n                    <p class=\"description\">We furnish instant payment confirmation receipt in the form of email. </p>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n               \n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"section section-our-team-freebie\">\n    <div class=\"parallax filter filter-color-grey\">\n        <div class=\"image\" style=\"background-image:url('../../assets/images/office-1.jpeg')\">\n        </div>\n        <div class=\"container\">\n            <div class=\"content\">\n                <div class=\"row\">\n                    <div class=\"title-area\">\n                        <h2>Who We Are</h2>\n                        <div class=\"separator separator-danger\">✻</div>\n                        <p class=\"description\">We are a young, dynamic service oriented team, focussed on alleviating the concerns of the elderly .</p>\n                    </div>\n                </div>\n\n                <div class=\"team\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-md-offset-1\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"card card-member\">\n                                        <div class=\"content\">\n                                            <div class=\"avatar avatar-danger\">\n                                                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_1.jpg\"/>\n                                            </div>\n                                            <div class=\"description\">\n                                                <h3 class=\"title\">Jayce</h3>\n                                                <p class=\"small-text\">CEO / Co-Founder</p>\n                                                <p class=\"description\">My passion is people and technology and I love collaborating to bring these two passions together.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <div class=\"card card-member\">\n                                        <div class=\"content\">\n                                            <div class=\"avatar avatar-danger\">\n                                                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_2.jpg\"/>\n                                            </div>\n                                            <div class=\"description\">\n                                                <h3 class=\"title\">Ashish</h3>\n                                                <p class=\"small-text\">Product Designer</p>\n                                                <p class=\"description\">I am a software consultant, and love to design and bring ideas to life through innovative designs.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <div class=\"card card-member\">\n                                        <div class=\"content\">\n                                            <div class=\"avatar avatar-danger\">\n                                                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_3.jpg\"/>\n                                            </div>\n                                            <div class=\"description\">\n                                                <h3 class=\"title\">Susan</h3>\n                                                <p class=\"small-text\">Marketing Pro</p>\n                                                <p class=\"description\">I am a business grad, passionate about connecting the technology advancements with people.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"section section-our-clients-freebie \">\n    <div class=\"container\">\n        <div class=\"title-area\">\n            <h5 class=\"subtitle text-gray\">Here are some</h5>\n            <h2>Clients Testimonials</h2>\n            <div class=\"separator separator-danger\">∎</div>\n        </div>\n        <div id=\"testimonials\">\n            <div class=\"avatar avatar-danger\">\n                <img alt=\"...\" class=\"img-circle\" src=\"../../assets/images/face_4.jpg\"/>\n            </div>\n    </div>\n    <div class=\"tab-content\">\n            <div class=\"tab-pane active\" id=\"testimonial1\">\n                <p class=\"description\">\n                   I am a client of CALMS for the past 1 year. I am very satisfied with their consistent, timely services and polite attitude.\n                I recommend this website to all who want to have hassle free utility services as a gift for their parents.\n                </p>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\n\n@Component({\n  selector: 'app-lab-edit',\n  templateUrl: './lab-edit.component.html',\n  styleUrls: ['./lab-edit.component.css']\n})\nexport class LabEditComponent implements OnInit {\n\n  \n  numbers:Number[]=[];\n  useremail ;\n  freqoptions;\n  selectedFreq;\n  userID;\n  \n   \n  labdetail= {userID:\"\",email:\"\",registeredDate:null,testname:\"\",visitfreq:\"\",visitdate:null};\n // today:String;\n nowDate:Date;\n task=new Task(\"\",\"\",\"\",null,false);\n scheduleddate:Date;\n //to calculate scheduled date of task\n currmonth;\n scheduledmonth;\n curryear;\n scheduledyear;\n currDate;\n scheduledday;\n   \n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n  \n   }\n  \n\n   labForm= this.fb.group(\n    {\n      testname:['',[Validators.required]],\n      visitfreq:['',[Validators.required]],\n      visitdate:['',[Validators.required]],\n\n  })\n\n  ngOnInit(): void {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n\n    this.userID=this._auth.getLoggedInUserID();\n    this._utils.getLabService(this.userID.toString())\n    .subscribe(\n      res=>{\n        console.log(res);\n          this.labdetail= JSON.parse(JSON.stringify(res));\n          this.labdetail.userID=this.userID.toString();\n          \n      },\n      err=>{\n        console.log(err);\n      }\n\n    )\n  }\n\n  update(){\n\n    this.useremail  = this._auth.getLoggedInUseremail();\n    this.userID  = this._auth.getLoggedInUserID();\n    this.nowDate= new Date();  \n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n    console.log(this.currmonth);\n    \n    // this.labdetail={userID:this.userID.toString(), testname:this.labForm.get('testname').value,\n    // visitfreq:this.labForm.get('visitfreq').value,visitdate:this.labForm.get('visitdate').value};\n\n    this._utils.updateLabservice(this.labdetail)\n    .subscribe(\n        res=>{\n          console.log(res);\n          \n          if(this.labForm.get('visitdate').touched || this.labForm.get('visitfreq').touched){\n\n            if(this.labForm.get('visitfreq').value ==\"Monthly\"){\n              if(this.currmonth ==11 && this.labForm.get('visitdate').value< this.currDate ){\n                this.scheduledmonth=0;\n                this.scheduledyear=this.curryear+1;\n              }\n              else if(this.labForm.get('visitdate').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                this.scheduledmonth=this.currmonth +1;\n                this.scheduledyear=this.curryear;\n              }\n           }\n           if(this.labForm.get('visitfreq').value ==\"Bimonthly\"){\n              if(this.currmonth ==11|| this.currmonth ==10 && this.labForm.get('visitdate').value< this.currDate ){\n                this.scheduledmonth=1;\n                this.scheduledyear=this.curryear+1;\n              }\n              else if(this.labForm.get('visitdate').value> this.currDate) {\n                this.scheduledmonth=this.currmonth;\n                this.scheduledyear=this.curryear;\n              }\n              else{\n                this.scheduledmonth=this.currmonth+2;\n                this.scheduledyear=this.curryear;\n              }\n           }\n           this.scheduledday=this.labForm.get('visitdate').value;\n    \n           this.task= {userID:this.userID,email:this.useremail,servicetype:'lab',scheduleddate:new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday),completed:false};\n        \n        this._utils.updatetask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              this._router.navigate(['/profile']);\n            },\n            err=>{\n            console.log(err);\n            }\n          )\n                       \n          }\n          \n        \n       \n        },\n        err=>{\n          console.log(err);\n        }\n\n    )\n\n\n  }\n\n}\n","\n<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n            <div class=\"col-md-4\"></div>\n            <div class=\"col-md-4\">\n                <div class=\"card rounded-0\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Lab @ Home service</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\"  [formGroup]=\"labForm\"  (ngSubmit)=\"update()\">\n                            <div class=\"form-group\">\n                                <label for=\"testname\">Test Name: </label>\n                                <input type=\"text\"  formControlName= \"testname\" name=\"testname\" id=\"testname\" class=\"form-control rounded-0\" [(ngModel)]='labdetail.testname' >\n                                <div *ngIf= \"labForm.get('testname').invalid && labForm.get('testname').touched\">\n                                    <small *ngIf = \"labForm.get('testname').errors?.required\" class=\"text-white\" >Test Name is required</small>\n                                   \n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group\" >\n                                <label for=\"visitfreq\">Visit Frequency: </label>\n                                <select  name=\"visitfreq\" id=\"visitfreq\" class=\"form-control rounded-0\" formControlName=\"visitfreq\" [(ngModel)]='labdetail.visitfreq' > \n                                   <option *ngFor=\"let visitfreq of freqoptions\" [ngValue]=\"visitfreq\">{{visitfreq}}</option> \n                            \n                                </select>\n                  \n                                <div *ngIf= \"labForm.get('visitfreq').invalid && labForm.get('visitfreq').touched\">\n                                    <small *ngIf = \"labForm.get('visitfreq').errors?.required\" class=\"text-white\" >Visit Frequency is required</small>\n                                    \n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"visitdate\">Visit Date: </label>\n                                \n                             \n                                <select  name=\"visitdate\" id=\"visitdate\" class=\"form-control rounded-0\" formControlName=\"visitdate\" [(ngModel)]='labdetail.visitdate'> \n                                    <option *ngFor=\"let visitdate of numbers\" [ngValue]=\"visitdate\">{{visitdate}}</option> \n                             \n                                 </select>\n                                <div *ngIf= \"labForm.get('visitdate').invalid && labForm.get('visitdate').touched\">\n                                    <small *ngIf = \"labForm.get('visitdate').errors?.required\" class=\"text-white\" >Visitng Date is required</small>\n                                    <small *ngIf = \"labForm.get('visitdate').errors?.serverError\" class=\"text-white\" >{{labForm.get('visitdate').errors?.serverError}}</small>\n                                </div>\n                               \n                            </div>\n                            <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                            <button type=\"submit\"  [disabled]=\"labForm.invalid\"  class=\"btn btn-success float-right\">Submit</button>\n                \n                \n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-4\"></div>\n        </div>\n    </div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {UtilsService} from '../utils.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Task} from '../tasks/task.model';\nimport {Labdetail} from '../lab-home/labdetail.model';\n\n\n@Component({\n  selector: 'app-lab-home',\n  templateUrl: './lab-home.component.html',\n  styleUrls: ['./lab-home.component.css']\n})\nexport class LabHomeComponent implements OnInit {\n\n  \n  constructor(private _utils: UtilsService,private _router:Router,private fb:FormBuilder,private _auth:AuthService)  {\n    this.numbers = Array(30).fill(0).map((x,i)=>i+1);  \n    this.freqoptions=[\"Monthly\",\"Bimonthly\"];\n   }\n  \n   numbers:Number[]=[];\n   useremail ;\n   freqoptions;\n   selectedFreq;\n   userID;\n   labdetail:Labdetail= new Labdetail(\"\", \"\",\"\",null, \"\",null);\n  // today:String;\n  nowDate:Date;\n  task=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  //to calculate scheduled date of task\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\nscheduledday;\n\n   labForm= this.fb.group(\n    {\n      testname:['',[Validators.required]],\n      visitfreq:['',[Validators.required]],\n      visitdate:['',[Validators.required]],\n\n  })\n\n  ngOnInit(): void {\n  }\n\n  subscribe(){\n\n    \n    this.useremail  = this._auth.getLoggedInUseremail();\n    this.userID  = this._auth.getLoggedInUserID();\n    this.nowDate= new Date();  \n    this.currmonth = this.nowDate.getMonth() ;\n    this.currDate=this.nowDate.getDate();\n    this.curryear=this.nowDate.getFullYear();\n    console.log(this.currmonth);\n    \n    this.labdetail={userID:this.userID, email:this.useremail,registeredDate:this.nowDate, testname:this.labForm.get('testname').value,\n    visitfreq:this.labForm.get('visitfreq').value,visitdate:this.labForm.get('visitdate').value};\n\n    this._utils.addlabservice(this.labdetail)\n    .subscribe(\n        res=>{\n          console.log(res);\n          if(this.labForm.get('visitfreq').value ==\"Monthly\"){\n            if(this.currmonth ==11 && this.labForm.get('visitdate').value< this.currDate ){\n              this.scheduledmonth=0;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.labForm.get('visitdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth +1;\n              this.scheduledyear=this.curryear;\n            }\n         }\n         if(this.labForm.get('visitfreq').value ==\"Bimonthly\"){\n            if(this.currmonth ==11|| this.currmonth ==10 && this.labForm.get('visitdate').value< this.currDate ){\n              this.scheduledmonth=1;\n              this.scheduledyear=this.curryear+1;\n            }\n            else if(this.labForm.get('visitdate').value> this.currDate) {\n              this.scheduledmonth=this.currmonth;\n              this.scheduledyear=this.curryear;\n            }\n            else{\n              this.scheduledmonth=this.currmonth+2;\n              this.scheduledyear=this.curryear;\n            }\n         }\n       \n        this.scheduledday=this.labForm.get('visitdate').value;\n    \n        // this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday);\n    console.log(this.scheduledmonth);\n    console.log(this.scheduledday);\n    console.log(this.scheduleddate);\n        console.log(\"Scheduled date is \"+ this.scheduleddate);\n        this.task= {userID:this.userID,email:this.useremail,servicetype:'lab',scheduleddate:new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday),completed:false};\n        \n        this._utils.addTask(this.task)\n            .subscribe(\n            res=>{\n              console.log(res);\n              this._router.navigate(['/profile']);\n            },\n            err=>{\n            console.log(err);\n            }\n          )\n       \n        },\n        err=>{\n          console.log(err);\n        }\n\n    )\n\n\n  }\n}\n","<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n<div class=\"row\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card rounded-0\" id=\"main\">\n            <div class=\"card-header\">\n                <h3 class=\"mb-0\">Lab @ Home service</h3>\n            </div>\n            \n            <div class=\"card-body\">\n                <form  class=\"form\"  [formGroup]=\"labForm\"  (ngSubmit)=\"subscribe()\">\n                    <div class=\"form-group\">\n                        <label for=\"testname\">Test Name: </label>\n                        <input type=\"text\"  formControlName= \"testname\" name=\"testname\" id=\"testname\" class=\"form-control rounded-0\" >\n                        <div *ngIf= \"labForm.get('testname').invalid && labForm.get('testname').touched\">\n                            <small *ngIf = \"labForm.get('testname').errors?.required\" class=\"text-white\" >Lab Name is required</small>\n                           \n                        </div>\n                    </div>\n                    \n                    <div class=\"form-group\" >\n                        <label for=\"visitfreq\">Visit Frequency: </label>\n                        <select  name=\"visitfreq\" id=\"visitfreq\" class=\"form-control rounded-0\" formControlName=\"visitfreq\" > \n                           <option *ngFor=\"let visitfreq of freqoptions\" [ngValue]=\"visitfreq\">{{visitfreq}}</option> \n                    \n                        </select>\n          \n                        <div *ngIf= \"labForm.get('visitfreq').invalid && labForm.get('visitfreq').touched\">\n                            <small *ngIf = \"labForm.get('visitfreq').errors?.required\" class=\"text-white\" >Visit Frequency is required</small>\n                            \n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"visitdate\">Visit Date: </label>\n                        \n                     \n                        <select  name=\"visitdate\" id=\"visitdate\" class=\"form-control rounded-0\" formControlName=\"visitdate\" > \n                            <option *ngFor=\"let visitdate of numbers\" [ngValue]=\"visitdate\">{{visitdate}}</option> \n                     \n                         </select>\n                        <div *ngIf= \"labForm.get('visitdate').invalid && labForm.get('visitdate').touched\">\n                            <small *ngIf = \"labForm.get('visitdate').errors?.required\" class=\"text-white\" >Visitng Date is required</small>\n                            <small *ngIf = \"labForm.get('visitdate').errors?.serverError\" class=\"text-white\" >{{labForm.get('visitdate').errors?.serverError}}</small>\n                        </div>\n                       \n                    </div>\n                    <button type=\"button\" routerLink=\"/profile\"  class=\"btn btn-success float-right ml-2\" >Cancel</button>\n                    <button type=\"submit\"  [disabled]=\"labForm.invalid\"  class=\"btn btn-success float-right\">Submit</button>\n        \n        \n                </form>\n            </div>\n        </div>\n        \n    </div>\n    <div class=\"col-md-4\"></div>\n</div>\n</div>\n</div>\n","export class Labdetail{\r\n\r\n    constructor(\r\n        public email:String,\r\n        public testname:String,\r\n        public visitfreq:String,\r\n        public visitdate:Number,\r\n        public userID:String,\r\n        public registeredDate:Date\r\n            \r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthService } from '../auth.service';\nimport {Router} from '@angular/router';\nimport { FormBuilder,Validators} from '@angular/forms';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n \n  loginForm = this.fb.group(\n\n    { email :['',[Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'),Validators.required]],\n    password:['',[Validators.minLength(6),Validators.required]]\n    }\n\n  )\n  \n  loginUserDetails={email:\"\",password:\"\"};\n  isAdmin:Boolean=false;\n  constructor(private _auth:AuthService,private _router:Router,private fb:FormBuilder) { }\n\n  loginUser(){\n    this._auth.loginUser(this.loginUserDetails)\n    .subscribe(\n      res=>{\n        console.log(res);\n        \n        localStorage.setItem('token',res['token']);\n        localStorage.setItem('CALMSuserID',res['id']);\n        localStorage.setItem('CALMSemail',res['email']);\n\n        if(res['isAdmin']==true){\n          localStorage.setItem('isAdmin',res['isAdmin']);\n          this._router.navigate(['/tasks']);\n        }\n        else{\n           this._router.navigate(['/profile']);\n        }\n      },\n      // err=>console.log(err);\n      err=>{\n        //handle server side errors\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n          if(err.status === 401) {\n            this.loginForm.get('password').setErrors({ serverError: validationError}); \n          }\n          else if(err.status === 422){\n            this.loginForm.get('email').setErrors({ serverError: validationError}); \n          }\n        }\n\n        }\n        \n    )\n  \n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","\n\n <div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n\n            <div class=\"col-md-4\"></div>\n            <div class=\"col-md-4\">\n\n                <div class=\"card rounded-0\" id=\"main\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Login</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n                            <div class=\"form-group\">\n                                <label for=\"uname1\" style=\"font-size:20px;font-weight:bold;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\">Email: </label>\n                                <input type=\"email\" formControlName=\"email\" [class.is-invalid] = \"loginForm.get('email').invalid && loginForm.get('email').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"loginUserDetails.email\"  name=\"email\" id=\"email\">\n                                <div *ngIf= \"loginForm.get('email').invalid && loginForm.get('email').touched\">\n                                    <small *ngIf = \"loginForm.get('email').errors?.required\" class=\"text-white\" >Email is required</small>\n                                    <small *ngIf = \"loginForm.get('email').errors?.pattern\" class=\"text-white\" >Enter a valid email</small>\n                                    <small *ngIf = \"loginForm.get('email').errors?.serverError\" class=\"text-white\" >{{loginForm.get('email').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\" style=\"font-size:20px;font-weight:bold;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\" >Password: </label>\n                                <input type=\"password\"  formControlName=\"password\" [class.is-invalid] = \"loginForm.get('password').invalid && loginForm.get('password').touched\" class=\"form-control rounded-0\"  [(ngModel)]=\"loginUserDetails.password\" name=\"password\" id=\"password\">\n                                <div *ngIf= \"loginForm.get('password').invalid && loginForm.get('password').touched\">\n                                    <small *ngIf = \"loginForm.get('password').errors?.required\" class=\"text-white\" >Password is required</small>\n                                    <small *ngIf = \"loginForm.get('password').errors?.minlength\" class=\"text-white\" >Minimum length of password is 6</small>\n                                    <small *ngIf = \"loginForm.get('password').errors?.serverError\" class=\"text-white\" >{{loginForm.get('password').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <br>\n                            <br>\n                            <button type=\"submit\" [disabled]='loginForm.invalid' class=\"btn btn-success btn-lg float-right\">Login</button>\n                        </form> \n                    </div>\n                </div>\n                \n                \n            </div>\n            <div class=\"col-md-4\"></div>\n        </div>\n    </div>\n </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"well col-xs-10 col-sm-10 col-md-6 col-xs-offset-1 col-sm-offset-1 col-md-offset-3\">\n            <div class=\"row\">\n                <div class=\"col-xs-6 col-sm-6 col-md-6\">\n                    <address>\n                        <strong>Elf Cafe</strong>\n                        <br>\n                        2135 Sunset Blvd\n                        <br>\n                        Los Angeles, CA 90026\n                        <br>\n                        <abbr title=\"Phone\">P:</abbr> (213) 484-6829\n                    </address>\n                </div>\n                <div class=\"col-xs-6 col-sm-6 col-md-6 text-right\">\n                    <p>\n                        <em>Date: 1st November, 2013</em>\n                    </p>\n                    <p>\n                        <em>Receipt #: 34522677W</em>\n                    </p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"text-center\">\n                    <h1>Receipt</h1>\n                </div>\n                \n                <table class=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>#</th>\n                            <th class=\"text-center\">Price</th>\n                            <th class=\"text-center\">Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td class=\"col-md-9\"><h4><em>Baked Rodopa Sheep Feta</em></h4></td>\n                            <td class=\"col-md-1\" style=\"text-align: center\"> 2 </td>\n                            <td class=\"col-md-1 text-center\">$13</td>\n                            <td class=\"col-md-1 text-center\">$26</td>\n                        </tr>\n                        <tr>\n                            <td class=\"col-md-9\"><h4><em>Lebanese Cabbage Salad</em></h4></td>\n                            <td class=\"col-md-1\" style=\"text-align: center\"> 1 </td>\n                            <td class=\"col-md-1 text-center\">$8</td>\n                            <td class=\"col-md-1 text-center\">$8</td>\n                        </tr>\n                        <tr>\n                            <td class=\"col-md-9\"><h4><em>Baked Tart with Thyme and Garlic</em></h4></td>\n                            <td class=\"col-md-1\" style=\"text-align: center\"> 3 </td>\n                            <td class=\"col-md-1 text-center\">$16</td>\n                            <td class=\"col-md-1 text-center\">$48</td>\n                        </tr>\n                        <tr>\n                            <td>   </td>\n                            <td>   </td>\n                            <td class=\"text-right\">\n                            <p>\n                                <strong>Subtotal: </strong>\n                            </p>\n                            <p>\n                                <strong>Tax: </strong>\n                            </p></td>\n                            <td class=\"text-center\">\n                            <p>\n                                <strong>$6.94</strong>\n                            </p>\n                            <p>\n                                <strong>$6.94</strong>\n                            </p></td>\n                        </tr>\n                        <tr>\n                            <td>   </td>\n                            <td>   </td>\n                            <td class=\"text-right\"><h4><strong>Total: </strong></h4></td>\n                            <td class=\"text-center text-danger\"><h4><strong>$31.53</strong></h4></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button type=\"button\" class=\"btn btn-success btn-lg btn-block\">\n                    Pay Now   <span class=\"glyphicon glyphicon-chevron-right\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","export class User{\r\n\r\nconstructor(\r\n\r\npublic email:String,\r\npublic name:String,\r\npublic address: String,\r\npublic contact:Number\r\n\r\n){}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {User} from './User.model';\nimport {UtilsService} from '../utils.service';\nimport {Service} from './service.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private _auth: AuthService,private _utils:UtilsService, private _route:Router) { }\n  \n  userID;\n  user =new User(null,null,null,null);\n  ebdata;\n  services:Service[]=[];\n  service= new Service(null,null,false,false);\n  serviceType;\n  labdata;\n  \nngOnChanges():void{\n\n  this.loadServices(); \n  \n}\n\n  ngOnInit(): void {\n     this.loadServices();\n  }\n\n  loadServices(){\n    this.userID=localStorage.getItem('CALMSuserID');\n    this._auth.getUserDetails(this.userID.toString())\n    .subscribe(\n      res=>{\n        this.user = JSON.parse(JSON.stringify(res));\n        console.log(this.userID.toString());\n        //Get EB services details\n        this._utils.getEBService(this.userID.toString())\n        .subscribe(\n          res=>{\n            console.log(res);\n              this.ebdata= JSON.parse(JSON.stringify(res));\n              if(this.ebdata !=null){\n              this.service=new Service(\"Electricity Bill Payment\",this.ebdata.registeredDate,true,false);\n              this.services.push(this.service);\n              }\n              console.log(this.services);\n\n              //get Lab services details\n              this._utils.getLabService(this.userID.toString())\n              .subscribe(\n                  res=>{\n                      this.labdata=JSON.parse(JSON.stringify(res));\n                      console.log(this.labdata);\n                      if(this.labdata != null){\n                        this.service=new Service(\"Lab@Home service\",this.labdata.registeredDate,false,true);\n                        this.services.push(this.service);\n                      }\n                      console.log(this.services);\n                  },\n                  err=>{\n                    console.log(err);\n                  }\n\n\n\n\n              )\n\n          },\n          err=>{\n            console.log(err);\n          }\n\n        )\n        \n      },\n      err=>{\n          console.log(err);\n      }\n    )      \n  }\n\n  edit(type){\n    if(type==\"Electricity Bill Payment\"){\n      this._route.navigate(['/ebilledit']);\n    }\n    else if(type==\"Lab@Home service\"){\n      this._route.navigate(['/labedit']);\n    }\n  }\n  deletebill(type){\n\n    console.log(type);\n    if(type==\"Electricity Bill Payment\"){\n      this.serviceType=\"eb\";\n    }\n    else if(type==\"Lab@Home service\"){\n      this.serviceType=\"lab\";\n    }\n    \n    if(confirm(\"Are you sure you want to delete this service and related tasks?\")==true){\n      if(this.serviceType=='eb'){\n        \n      this._utils.deleteEBService(this.userID) \n      .subscribe((data)=>{\n                \n          \n        //  this.service=JSON.parse(JSON.stringify(data));\n        //  if(this.service !=null){\n        //   this.service=new Service(\"Electricity Bill Payment\",this.ebdata.registeredDate,true,false);\n        //   this.services.push(this.service);\n        //  }\n         \n         this._utils.deletetasksforuserandservicetype(this.userID,this.serviceType)\n         .subscribe(\n          res=>{\n            console.log(\"Tasks deleted\");\n            this.services=[];\n          this.loadServices();\n          },\n          err=>{\n            console.log(err);\n          }\n\n         )\n        console.log(data); \n      })\n      }\n\n      else if(this.serviceType=='lab'){\n        this._utils.deleteLabService(this.userID) \n        .subscribe((data)=>{\n                  \n             this.services=[];\n          //  this.service=JSON.parse(JSON.stringify(data));\n          //  if(this.service !=null){\n          //   this.service=new Service(\"Lab@Home Service\",this.labdata.registeredDate,false,true);\n          //   this.services.push(this.service);\n          //  }\n           \n           this._utils.deletetasksforuserandservicetype(this.userID,this.serviceType)\n           .subscribe(\n            res=>{\n              console.log(\"Tasks deleted\");\n              this.services=[];\n          this.loadServices();\n            },\n            err=>{\n              console.log(err);\n            }\n  \n           )\n          console.log(data); \n        })\n      }\n  }\n}\n}\n\n","\n<div id=\"top\" class=\"card mx-auto\">\n    <h3>CALMS Profile Page</h3>\n</div>\n<div class=\"card \">\n    <div class=\"row\">\n        \n\n      <div class=\"col-md-6\">\n          <br>\n          <br>\n        <h4> Personal Profile</h4>\n     \n          <div class=\"card-body\" >\n              <form >\n                  <label for=\"\">Name:</label>\n                  <label class=\"form-control\" for=\"\">{{user.name}}</label>\n                  <label for=\"\">Email:</label>\n                  <label class=\"form-control\" for=\"\">{{user.email}}</label>\n                  <label for=\"\">Address:</label>\n                  <label class=\"form-control\" for=\"\">{{user.address}}</label>\n                  <label for=\"\">Contact Number:</label>\n                  <label class=\"form-control\" for=\"\">{{user.contact}}</label>\n                  <br>\n                  <button type=\"submit\" class=\"float-right btn btn-primary\" routerLink=\"/editprofile\" >Edit User Details</button>\n              </form>\n          </div>\n      </div>\n      \n      <div class=\"col-md-6\">\n          \n        <br>\n        <br>\n           <h4> List of Enrolled Services</h4>\n        \n        <br>\n      \n             <div class=\"table-responsive\">\n                 <div class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Service Type</th>\n                            <th>Date of Registration</th>\n                            <th></th>\n                            <th><button class=\"btn btn-primary\" routerLink=\"/serviceshome\" >Add Service</button></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let service of services\">\n                            <td>{{service.type}}</td>\n                            <td>{{service.registereddate | date}}</td>\n                            <td><button class=\"btn btn-primary\" (click)=\"edit(service.type)\">Edit</button></td>\n                            \n                            <td><button class=\"btn btn-danger\" (click)=\"deletebill(service.type)\" >Delete</button></td>\n                        </tr>\n                    </tbody>\n                 </div>\n             </div>\n        </div>\n    </div>\n</div>\n\n \n\n\n","export class Service{\r\n\r\n    constructor(\r\n        public type:String,\r\n        public registereddate:Date,\r\n        public isEB:Boolean,\r\n        public isLab:Boolean\r\n    ){ }\r\n}","import { FormGroup } from '@angular/forms';\r\n    \r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthService } from '../auth.service';\nimport {Router} from '@angular/router';\nimport { FormGroup,FormBuilder,Validators} from '@angular/forms';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {ConfirmedValidator} from './confirmedvalidator';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  \n   registeredUser = {email:\"\", password:\"\",confpassword:\"\",name:\"\",address:\"\",contact:undefined};\n   passwordpattern = '^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9!@#$%^&*]+.{8,}$'\n\n  constructor(private _auth:AuthService,private _router:Router,private fb:FormBuilder) { }\n\n  // phonePattern = /^[0-9]{10,12}$/;\n  registerForm = this.fb.group(\n\n    { email :['',[Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'),Validators.required]],\n    // password:['',[Validators.minLength(6),Validators.required]],\n    password:['',[Validators.required,Validators.pattern(this.passwordpattern)]],\n    confpassword:['',[Validators.required]],\n    address:['',[Validators.required]],\n    name:['',[Validators.required]],\n    \n    contact:['',[ Validators.minLength(10),  \n      Validators.maxLength(12),  \n      Validators.pattern('^[0-9]*$')]]\n    },\n    { \n      validator: ConfirmedValidator('password', 'confpassword')\n    } \n  )\n\n  registerUser(){\n    this._auth.registerUser(this.registeredUser)\n    .subscribe(\n      res=>{\n        localStorage.setItem('token',res['token']);    \n        this._router.navigate(['/login']);\n      },\n      err=>{\n        console.log(err);\n        //handle server side errors\n        if(err instanceof HttpErrorResponse){\n          const validationError = err.error;\n           if(err.status === 422){\n            this.registerForm.get('email').setErrors({ serverError: validationError}); \n          }\n        }\n\n\n      }\n    )\n  \n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n\n            <div class=\"col-md-4\"></div>\n\n            <div class=\"col-md-4\">\n            \n                <div class=\"card rounded-0\" id=\"main\">\n                    <div class=\"card-header\">\n                        <h3 class=\"mb-0\">Register</h3>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form  class=\"form\"  [formGroup]=\"registerForm\"  (ngSubmit)=\"registerUser()\">\n                            <div class=\"form-group\">\n                                <label for=\"uname1\">Email: </label>\n                                <input type=\"email\" formControlName=\"email\" [class.is-invalid] = \"registerForm.get('email').invalid && registerForm.get('email').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.email\"  name=\"email\" id=\"email\">\n                                <div *ngIf= \"registerForm.get('email').invalid && registerForm.get('email').touched\">\n                                    <small *ngIf = \"registerForm.get('email').errors?.required\" class=\"text-white\" >Email is required</small>\n                                    <small *ngIf = \"registerForm.get('email').errors?.pattern\" class=\"text-white\" >Enter a valid email</small>\n                                    <small *ngIf = \"registerForm.get('email').errors?.serverError\" class=\"text-white\" >{{registerForm.get('email').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\">Password: </label>\n                                <input type=\"password\"  formControlName=\"password\" [class.is-invalid] = \"registerForm.get('password').invalid && registerForm.get('password').touched\" class=\"form-control rounded-0\"  [(ngModel)]=\"registeredUser.password\" name=\"password\" id=\"password\">\n                                <div *ngIf= \"registerForm.get('password').invalid && registerForm.get('password').touched\">\n                                    <small *ngIf = \"registerForm.get('password').errors?.required\" class=\"text-white\" >Password is required</small>\n                                    <small *ngIf = \"registerForm.get('password').errors?.pattern\" class=\"text-white\" >Password should be at least 8 characters long and should contain one number,one upper case character, one lower case character.</small>\n                                    \n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\">Confirm Password: </label>\n                                <input type=\"password\"  formControlName=\"confpassword\" [class.is-invalid] = \"registerForm.get('confpassword').invalid && registerForm.get('confpassword').touched\" class=\"form-control rounded-0\"  [(ngModel)]=\"registeredUser.confpassword\" name=\"confpassword\" id=\"confpassword\" >\n                                <div *ngIf= \"registerForm.get('confpassword').invalid && registerForm.get('confpassword').touched\">\n                                    <small *ngIf = \"registerForm.get('confpassword').errors?.required\" class=\"text-white\" >Confirm Password is required</small>\n                                    <small *ngIf = \"registerForm.get('confpassword').errors?.pattern\" class=\"text-white\" >Password should be at least 8 characters long and should contain one number,one upper case character, one lower case character</small>\n                                    <small *ngIf = \"registerForm.get('confpassword').errors?.confirmedValidator\" class=\"text-white\" >Password and Confirm Password must match</small>\n                                    \n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"name\">Name: </label>\n                                <input type= \"text\" formControlName=\"name\" [class.is-invalid] = \"registerForm.get('name').invalid && registerForm.get('name').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.name\"  name=\"name\" id=\"name\">\n                                <div *ngIf= \"registerForm.get('name').invalid && registerForm.get('name').touched\">\n                                    <small *ngIf = \"registerForm.get('name').errors?.required\" class=\"text-white\" >Name is required</small>\n                                    <small *ngIf = \"registerForm.get('name').errors?.serverError\" class=\"text-white\" >{{registerForm.get('name').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"address\">Address: </label>\n                                <input type=\"text\" formControlName=\"address\" [class.is-invalid] = \"registerForm.get('address').invalid && registerForm.get('address').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.address\"  name=\"address\" id=\"address\">\n                                <div *ngIf= \"registerForm.get('address').invalid && registerForm.get('address').touched\">\n                                    <small *ngIf = \"registerForm.get('address').errors?.required\" class=\"text-white\" >Address is required</small>\n                                    <small *ngIf = \"registerForm.get('address').errors?.serverError\" class=\"text-white\" >{{registerForm.get('address').errors?.serverError}}</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"contact\">Contact Number: </label>\n                                <input type=\"text\" formControlName=\"contact\" [class.is-invalid] = \"registerForm.get('contact').invalid && registerForm.get('contact').touched\" class=\"form-control rounded-0\" [(ngModel)]=\"registeredUser.contact\"  name=\"contact\" id=\"contact\">\n                                <div *ngIf= \"registerForm.get('contact').invalid && registerForm.get('contact').touched\">\n                                    <small *ngIf = \"registerForm.get('contact').errors?.required\" class=\"text-white\" >Contact number is required. </small>\n                                    <small *ngIf = \"registerForm.get('contact').errors?.pattern\" class=\"text-white\" >Only numbers are allowed. </small>\n                                    <small *ngIf = \"registerForm.get('contact').errors?.minlength\" class=\"text-white\" >Contact number should have atleast 10 numbers. </small>\n                                    <small *ngIf = \"registerForm.get('contact').errors?.maxlength\" class=\"text-white\" >Contact number can have max 12 numbers. </small>\n                                    \n                                </div>\n                            </div>\n                            <button type=\"submit\" [disabled]=\"registerForm.invalid\" class=\"btn btn-success float-right\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n            \n            </div>\n\n            <div class=\"col-md-4\"></div>\n            \n\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-services-home',\n  templateUrl: './services-home.component.html',\n  styleUrls: ['./services-home.component.css']\n})\nexport class ServicesHomeComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"row\">\n        <div class=\"col-md-6\" style=\"border: solid 1px white;\">\n            <div class=\"card-header\">\n                <h3>\n                    Introducing - CALMS Services\n                </h3>\n            </div>\n            <div  >\n                <h6 style=\"margin-left: 5px;\">CALMS has a vision of offering a wide varitey of services to make living in your own home hassle free\n                    and comfortable.</h6>\n                <br>\n                <br>\n                <ul>\n                    <li>Electricity Payment Service\n                    <p>Paying electricity bill online is the most helpful option, you can pay anywhere & anytime without jumping the deadline. We can pay your EB bill without missing out the last date of electricity bill payment that leads to extra payment of late charges.</p>\n                    <button class=\"btn btn-primary\" routerLink=\"ebillsubscribe\">Subscribe</button>\n                    </li>\n                </ul>\n             \n                <ul>\n                    <li>Lab@Home Service\n                    <p>We have tied with up Apollo Diagnostics who offer the sheer convenience of Home Sample Collection.\n                        On receiving a call, Apollo’s trained technicians arrive at the doorstep of the patient to collect samples. Home collection is completely free of cost and reports can be mailed to you or can be delivered at home (On Chargeable Basis) the very next day.</p>\n                    <button class=\"btn btn-primary\" routerLink=\"labsubscribe\">Subscribe</button>\n                    </li>\n                </ul>\n                <p style=\"color:black\"><b>Watch this space for more exciting services in the near future!</b></p>\n            \n            </div>\n           \n        </div>\n        <div class=\"col-md-6\"  style=\"border: solid 1px white;\">\n            <h5 style=\"margin-top: 20px;\">Here's a video of how the advancements of technology are assiting the elderly.</h5>\n            <br>\n            <div style=\"margin-left: 100px;\" >\n                \n                <youtube-player\n                videoId=\"lNWHS9Kok8Q\" \n                suggestedQuality=\"large\" \n                [height]=\"450\" \n                [width]=\"500\" \n                [startSeconds]=\"'4'\"\n                [endSeconds]=\"60\">\n                </youtube-player>\n                \n            </div>\n        </div>\n    </div>\n  \n           \n\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <!-- <div class=\"main\">\n    \n        <div class=\"bg-light border-right\" id=\"sidebar-wrapper\">\n            <div class=\"sidebar-heading\">CALMS Services  </div>\n            <div class=\"list-group list-group-flush\">\n            <a routerLink=\"ebillsubscribe\" class=\"list-group-item list-group-item-action bg-light\">Electricity Bill Payment</a>\n            <a routerLink=\"mbillsubscribe\" class=\"list-group-item list-group-item-action bg-light\">Mobile Bill Payment</a>\n           \n            </div>\n        </div>\n     \n   \n\n      <div class=\"right\">\n          <router-outlet></router-outlet>\n      </div>\n    </div> -->\n\n\n    <div class=\"main\">\n        <router-outlet></router-outlet>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {UtilsService} from '../utils.service';\nimport {TaskDetail} from '../tasks/taskdetail.model';\nimport {AuthService} from '../auth.service';\nimport {Task} from '../tasks/task.model';\n\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.css']\n})\nexport class TaskDetailComponent implements OnInit {\n\n  taskid;\n  task:TaskDetail = new TaskDetail(\"\",\"\",\"\",null,\"\",false,null,\"\",null);\n  taskdata;\n  ebdata;\n  userID ;\n  userDetails;\n  isEBservice=false;\n  isLabservice=false;\n  labdata;\n\n  //for setting scheduled date of new task\n  today:Date;\n  nowDate:Date;\n  newtask=new Task(\"\",\"\",\"\",null,false);\n  scheduleddate:Date;\n  currmonth;\n  scheduledmonth;\n  curryear;\n  scheduledyear;\n  currDate;\n  scheduledday;\n   activedate:Date ;\n  mail={email:\"\",subject:\"\",text:\"\"};\n  frequency;\n  nextdate;\n  constructor(private route:ActivatedRoute,private _router:Router,private _utils :UtilsService,private _auth:AuthService)\n   {\n\n    this.route.params.subscribe(\n      params=>{\n          this.taskid = params['id'];\n          console.log(this.taskid);\n      })\n   \n      this._utils.getsingletask(this.taskid.toString())\n      .subscribe(\n        res=>{\n          this.taskdata = JSON.parse(JSON.stringify(res));\n          \n          if(this.taskdata.servicetype==\"eb\"){\n            this.isEBservice=true;\n          }\n          else if(this.taskdata.servicetype=='lab'){\n            this.isLabservice=true;\n          }\n\n          //populating the taskdetail \n          this.task.email= this.taskdata.email;\n          this.task.servicetype=this.taskdata.servicetype;\n          \n          this.task.scheduleddate=this.taskdata.scheduleddate;\n          this.task.completed=this.taskdata.completed;\n         this.userID = this.taskdata.userID;\n         this._auth.getUserDetails(this.userID.toString())\n         .subscribe(\n           res=> {\n               this.userDetails=JSON.parse(JSON.stringify(res));\n               this.task.contact=this.userDetails.contact;\n           },\n           err=>{\n             console.log(err)\n           })\n\n          if(this.isEBservice){\n            this._utils.getEBService(this.userID.toString())\n            .subscribe(\n              res=>{\n                this.ebdata = JSON.parse(JSON.stringify(res));\n                console.log(this.ebdata);\n                this.task.consumernum=this.ebdata.consumernum;\n                this.task.paymentfreq=this.ebdata.paymentfreq;\n                this.task.paymentdate=this.ebdata.dateofpayment;\n                  \n              },\n              err=>{\n                console.log(err);\n              })\n          }\n          else if(this.isLabservice){\n                this._utils.getLabService(this.userID.toString())\n                .subscribe(\n                    res=>{\n                      this.labdata=JSON.parse(JSON.stringify(res));\n                      this.task.testname= this.labdata.testname;\n                      this.task.paymentdate=this.labdata.visitdate;\n                      this.task.paymentfreq=this.labdata.visitfreq;\n                    },\n                    err=>{\n                      console.log(err);\n                    }\n\n                )\n          }\n          \n\n        },\n        err=>{\n            console.log(err);\n\n        })\n      \n\n\n    }\n\n  ngOnInit(): void {\n\n  }\n\n  completeTask(){\n    \n    \n        this.frequency = this.task.paymentfreq;\n        this.nextdate=this.task.paymentdate;\n   \n\n\n    if (confirm(\"An email confirmation will be sent to the client. Are you sure you want to continue?\") == true){\n      \n     \n    this.activedate= new Date(this.task.scheduleddate);\n    console.log(this.task.scheduleddate);\n\n    this.currmonth = this.activedate.getMonth() ;\n    console.log(this.currmonth);\n    this.curryear=this.activedate.getFullYear();\n\n    this._utils.completetask(this.taskdata._id.toString())\n    .subscribe(\n      res=>{\n        if(this.frequency ==\"Monthly\"){\n          if(this.currmonth ==11 ){\n            this.scheduledmonth=0;\n            this.scheduledyear=this.curryear+1;\n          }\n                \n          else{\n            this.scheduledmonth=this.currmonth +1;\n            this.scheduledyear=this.curryear;\n          }\n       }\n       if(this.frequency ==\"Bimonthly\"){\n          if(this.currmonth ==11|| this.currmonth ==10 ){\n            this.scheduledmonth=1;\n            this.scheduledyear=this.curryear+1;\n          }\n          else{\n            this.scheduledmonth=this.currmonth+2;\n            this.scheduledyear=this.curryear;\n          }\n       }\n     \n      this.scheduledday=this.nextdate;\n  console.log(this.nextdate+\"Scheduledday\");\n      this.scheduleddate=new Date(this.scheduledyear,this.scheduledmonth,this.scheduledday,0,0,0,0);\n  \n      console.log(\"Scheduled date is \"+ this.scheduleddate);\n      this.newtask= {userID:this.userID,email:this.userDetails.email,servicetype: this.task.servicetype,scheduleddate:this.scheduleddate,completed:false};\n      \n      this._utils.addTask(this.newtask)\n          .subscribe(\n          res=>{\n            console.log(res);\n            this._router.navigate(['/tasks']);\n          },\n          err=>{\n          console.log(err);\n          }\n        )\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n\n  }\n     \n    //  Mail confirmation code starts\n      this.mail.email=this.userDetails.email;\n      if(this.task.servicetype == 'eb'){\n        this.mail.subject=\"Electricity Bill Payment - CALMS - Confirmation\";\n        \n        this.mail.text=`Electricity Bill Payment scheduled for ${this.activedate} has been completed` ;\n      }\n      else if(this.task.servicetype=='lab')\n      {\n        this.mail.subject=\"Lab@home Service - CALMS - Call confirmation\";\n        \n        this.mail.text=`Lab visit has been scheduled for ${this.activedate}` ;\n\n      }\n      \n      this._utils.sendmail(this.mail)\n        .subscribe(\n          res=>{\n            console.log(res);\n          },\n          err=>{\n            console.log(err);\n          }\n\n        )\n    }\n    //  Mail confirmation code ends\n\n    \n\n}\n"," <div class=\"table\" id=\"maintable\">\n    <div class=\"image\" style=\"background-image: url('../../assets/images/office-1.jpeg')\"> \n        <div class=\"row\">\n\n        <div class=\"col-md-4\"></div>\n        <div class=\"col-md-5\">\n            \n\n                            <div class=\"card rounded-0\" id=\"main\">\n                                <div class=\"card-header\">\n                                    <h3 class=\"mb-0\">Task Details</h3>\n                                </div>\n                                \n                                <div class=\"card-body\">\n                                    <form >\n                                        <label for=\"\">User email:</label>\n                                        <label class=\"form-control\" for=\"\">{{task.email}}</label>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Service Type:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.servicetype}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <div *ngIf=\"isEBservice\">\n                                                    <label for=\"\">Electricity Consumer Number:</label>\n                                                    <label class=\"form-control\" for=\"\">{{task.consumernum}}</label>\n                                                </div>\n                                                <div *ngIf=\"isLabservice\">\n                                                    <label for=\"\">Lab Test Name:</label>\n                                                    <label class=\"form-control\" for=\"\">{{task.testname}}</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"isEBservice\" class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">EB Payment Frequency:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentfreq}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">EB Payment Date</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentdate}}</label>    \n                                            </div>\n                                        </div>\n                                        \n                                        <div *ngIf=\"isLabservice\" class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Visit Frequency:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentfreq}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Visit Date</label>\n                                                <label class=\"form-control\" for=\"\">{{task.paymentdate}}</label>    \n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Task Scheduled Date:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.scheduleddate | date}}</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Task Completed?</label>\n                                                <label class=\"form-control\" for=\"\">{{task.completed? 'Yes':'No'}}</label>    \n                                            </div>\n                                        </div>\n                                        \n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Funds Available:</label>\n                                                <label class=\"form-control\" for=\"\">Rs 20,000</label>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label for=\"\">Contact Number:</label>\n                                                <label class=\"form-control\" for=\"\">{{task.contact}}</label>\n                                            </div>\n                                        </div>\n                                        \n                                        <div>\n                                            <button type=\"button\" class=\"btn btn-success float-right ml-2\" routerLink=\"/tasks\">Cancel</button>\n                                            <button type=\"submit\" [disabled]=\"task.completed\" class=\"btn btn-success float-right\"(click)=\"completeTask()\">Complete Task</button>\n                                        </div>\n                                    </form>\n                                </div>\n                </div>\n                \n\n            </div>\n            <div class=\"col-md-3\"></div>\n        </div>\n    </div>\n </div>\n\n \n\n","export class Task{\r\n        \r\n        constructor(\r\n            public userID:String,\r\n            public email:String,\r\n            public servicetype:String,\r\n            public scheduleddate:Date,\r\n            public completed:Boolean\r\n        ){}\r\n\r\n}","export class TaskDetail{\r\n\r\n    constructor(\r\n        public email:String,\r\n        public servicetype:String,\r\n        public consumernum:String,\r\n        public scheduleddate:Date,\r\n        public testname:String,\r\n        public completed:boolean,\r\n        public contact:Number,\r\n        public paymentfreq:String,\r\n        public paymentdate:Number\r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport {UtilsService} from '../utils.service';\nimport { Task } from './task.model';\n\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\n\nexport class TasksComponent implements OnInit {\n\n  constructor(private _utils:UtilsService) { }\n  searchAll:Boolean  = true;\n  \n  tasks:Task[];\n\n  ngOnInit(): void {\n      this.showalltasks();\n   \n  }\n\n  toggleSearch(){\n    this.searchAll=!this.searchAll;\n    if(!this.searchAll){\n        this.showincompletetasks();\n    }\n    else{\n      this.showalltasks();\n    }\n\n  }\n  showincompletetasks(){\n    this._utils.getincompletetasks()\n    .subscribe(\n\n      res=>{\n        console.log(res);\n        this.tasks=[];\n        this.tasks = JSON.parse(JSON.stringify(res));\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  showalltasks(){\n    this._utils.gettasks()\n    .subscribe(\n      res=>{\n        console.log(res);\n\n        this.tasks = JSON.parse(JSON.stringify(res));\n\n      },\n      err=>\n      {\n        console.log(err);\n\n      }\n\n    )\n\n  }\n}\n","<div class=\"card mx-auto\">\n    <div class=\"card-header\">\n        <h4> List of Scheduled Tasks</h4>\n     </div>\n     <div class=\"card-body\" id=\"main\">\n          <div class=\"table-responsive\">\n              <table class=\"table table-striped\">\n                 <thead>\n                     <tr>\n                         <th scope=\"col\">User Email</th>\n                         <th scope=\"col\">Task Type</th>\n                         <th scope=\"col\">Scheduled Date</th>\n                         <th scope=\"col\">Completed?  </th>\n                         <th> <button class=\"btn btn-primary\" (click)=\"toggleSearch()\">Show {{searchAll? 'Incomplete ': 'All ' }} Tasks </button></th>\n                          \n                     </tr>\n                 </thead>\n                 <tbody>\n                     <tr *ngFor=\"let task of tasks\">\n                         <td>{{task.email}}</td>\n                         <td>{{task.servicetype}}</td>\n                         <td>{{task.scheduleddate | date}}</td>\n                         <td >{{task.completed ? 'Yes':'No'}}</td>\n                         <td> <a class=\"btn btn-primary\" routerLink=\"/taskdetail/{{task._id}}\">Open Task</a></td>\n                     </tr>\n                 </tbody>\n                </table>\n          </div>\n     </div>\n\n</div>","import { Injectable, Injector } from '@angular/core';\nimport {HttpInterceptor} from '@angular/common/http';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService {\n\n  constructor(private injector:Injector) { }\n  \n intercept(req,nxt){\n  let authService = this.injector.get(AuthService);\n  let tokenizedReq=req.clone(\n    {\n     setHeaders:{\n       // Authorization:'Bearer ab.bb.cc'\n       Authorization: `Bearer ${authService.getToken()}`\n     }\n\n    }\n  )\n  return nxt.handle(tokenizedReq);\n\n}\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from  '../auth.service';\nimport {User} from '../profile/User.model';\nimport {UtilsService} from '../utils.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor(private _auth: AuthService,private _utils:UtilsService) { }\n\n  users:User[];\n  ngOnInit(): void {\n    \n    this._auth.getUsers()\n    .subscribe(\n      res=>{\n        console.log(res);\n        this.users = JSON.parse(JSON.stringify(res));\n\n      },\n      err=>\n      {\n        console.log(err);\n\n      }\n\n    )\n  }\n\n  deleteUser(id){\n\n    if(confirm(\"Are you sure you want to delete the User and related services and tasks?\")==true){\n      this._auth.deleteUser(id.toString())\n      .subscribe(\n        res=>\n        {\n           this.users = JSON.parse(JSON.stringify(res)); \n           //delete all Electricity bills for the user\n           this._utils.deleteEBService(id.toString())\n           .subscribe(\n             res=>{\n              console.log(\"All eb services for user deleted\");\n              this._utils.deleteLabService(id.toString())\n              .subscribe(\n\n                res=>\n                {\n                  this._utils.deletetasksforUser(id.toString())\n                  .subscribe(\n                    res=>{\n                      \n                        console.log(\"All tasks for user deleted\");\n                    },\n                    err=>\n                    {\n                      console.log(err);\n                    }\n                  )\n                },\n                err=>{\n                  console.log(err);\n                }\n              )\n              \n             },\n             err=>{\n               console.log(err);\n             }\n           )\n        },\n        \n          err=>{\n            console.log(err);\n        }\n      )\n    }\n\n  }\n}\n","<div class=\"card mx-auto\">\n    <div class=\"card-header\">\n        <h4> List of Users</h4>\n     </div>\n     <div class=\"card-body\" id=\"main\">\n          <div class=\"table-responsive\">\n              <table class=\"table table-striped\">\n                 <thead>\n                     <tr>\n                         <th scope=\"col\">Email</th>\n                         <th scope=\"col\">Name</th>\n                         <th scope=\"col\">Address</th>\n                         <th scope=\"col\">Contact Number </th>\n                         <th></th>\n                          \n                     </tr>\n                 </thead>\n                 <tbody>\n                     <tr *ngFor=\"let user of users\">\n                         <td>{{user.email}}</td>\n                         <td>{{user.name}}</td>\n                         <td>{{user.address}}</td>\n                         <td>{{user.contact}}</td>\n                         <td> <a class=\"btn btn-primary\" (click)=\"deleteUser(user._id)\">Delete User</a></td>\n                     </tr>\n                 </tbody>\n                </table>\n          </div>\n     </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { templateJitUrl } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  // private _addebillUrl = \"http://localhost:3000/addebill\";\n  // private _getEBServiceUrl = \"http://localhost:3000/getEBService\";\n  // private _updateEBServiceUrl=\"http://localhost:3000/updateEbill\";\n  // private _deleteEBServiceUrl=\"http://localhost:3000/deleteEBill\";\n  // private _addTaskUrl=\"http://localhost:3000/addtask\";\n  // private _updatetaskUrl=\"http://localhost:3000/updatetask\";\n  // private _gettasksUrl=\"http://localhost:3000/gettasks\";\n  // private _getincompletetasksUrl=\"http://localhost:3000/getincompletetasks\";\n  // private _getsingletaskUrl =\"http://localhost:3000/getsingletask\";\n  // private _completetaskUrl=\"http://localhost:3000/completetask\";\n  // private _sendmailUrl=\"http://localhost:3000/sendmail\";\n  // private _deletetasksforUserUrl = \"http://localhost:3000/deletetasksforUser\";\n  // private _deletetasksforUserandservicetypeUrl = \"http://localhost:3000/deletetasksforUserandservicetype\";\n  // private _addlabserviceUrl = \"http://localhost:3000/addlabservice\";\n  // private _getlabServiceUrl = \"http://localhost:3000/getlabService\";\n  // private _updateLabserviceUrl = \"http://localhost:3000/updateLabservice\";\n  // private _deleteLabserviceUrl= \"http://localhost:3000/deleteLabservice\";\n  private _addebillUrl = \"addebill\";\n  private _getEBServiceUrl = \"getEBService\";\n  private _updateEBServiceUrl=\"updateEbill\";\n  private _deleteEBServiceUrl=\"deleteEBill\";\n  private _addTaskUrl=\"addtask\";\n  private _updatetaskUrl=\"updatetask\";\n  private _gettasksUrl=\"gettasks\";\n  private _getincompletetasksUrl=\"getincompletetasks\";\n  private _getsingletaskUrl =\"getsingletask\";\n  private _completetaskUrl=\"completetask\";\n  private _sendmailUrl=\"sendmail\";\n  private _deletetasksforUserUrl = \"deletetasksforUser\";\n  private _deletetasksforUserandservicetypeUrl = \"deletetasksforUserandservicetype\";\n  private _addlabserviceUrl = \"addlabservice\";\n  private _getlabServiceUrl = \"getlabService\";\n  private _updateLabserviceUrl = \"updateLabservice\";\n  private _deleteLabserviceUrl= \"deleteLabservice\";\n\n  constructor(private http: HttpClient) { }\n\n  addEbill(billdata){\n    console.log(billdata);\n    return this.http.post(this._addebillUrl,billdata);\n  }\n\n  getEBService(userID){\n    return this.http.post(this._getEBServiceUrl,{userID:userID});\n  }\n\n  updateEBService(ebill){\n    return this.http.post(this._updateEBServiceUrl,ebill);\n\n  }\n\n  deleteEBService(userID){\n    return this.http.post(this._deleteEBServiceUrl,{userID:userID});\n  }\n\n  addTask(task){\n    return this.http.post(this._addTaskUrl,task);\n  }\n\n  updatetask(task){\n    return this.http.post(this._updatetaskUrl,task);\n\n  }\n\n  deletetasksforUser(id){\n    return this.http.post(this._deletetasksforUserUrl,{\"userID\":id});\n  }\n  \n  deletetasksforuserandservicetype(id,type){\n    return this.http.post(this._deletetasksforUserandservicetypeUrl,{\"userID\":id,\"servicetype\":type});\n\n  }\n  gettasks(){\n    return this.http.get(this._gettasksUrl);\n  }\n\n  getincompletetasks(){\n    return this.http.get(this._getincompletetasksUrl);\n  }\n\n  getsingletask(_id){\n    return this.http.post(this._getsingletaskUrl,{_id:_id});\n  }\n\n  completetask(_id){\n  return this.http.post(this._completetaskUrl,{_id:_id});\n  }\n  \n  sendmail(mail){\n    return this.http.post(this._sendmailUrl,mail);\n  }\n\n  addlabservice(labdata){\n    console.log(labdata);\n    return this.http.post(this._addlabserviceUrl,labdata);\n  }\n\n  getLabService(userID){\n    return this.http.post(this._getlabServiceUrl,{userID:userID});\n  }\n\n  updateLabservice(labdata){\n    return this.http.post(this._updateLabserviceUrl,labdata)\n  }\n\n  deleteLabService(userID){\n    return this.http.post(this._deleteLabserviceUrl,{userID:userID});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}